description = "Webcert (FitNesse)"

apply plugin: "groovy"
apply plugin: "inera-fitnesse"

fitnesse {
    port = 9126
    root = "FitNesseRoot"
    workingDir = "src/test/fitnesse"
    wikiStartPage = "WebCert.AutomatiseradeTester"

    if (project.hasProperty('fileOutput')) {
        outputFormat = project.findProperty('outputFormat') ?: "xml&includehtml"
    }

    extraProperties = [
        "fitnesse.working"   : "src/test/fitnesse",
        "geb.env"            : System.properties['geb.env'] ?: "firefox",
        "webcert.web.baseUrl": System.properties['web.baseUrl'] ?: "http://localhost:9088/",
        "webcert.baseUrl"    : System.properties['baseUrl'] ?: "http://localhost:9088/",
        "logsender.baseUrl"  : System.properties['logsender.baseUrl'] ?: "http://localhost:9097/log-sender/",
        "certificate.baseUrl": System.properties['certificate.baseUrl'] ?: "http://localhost:8080/inera-certificate/",
        "slim.port"          : "9147"
        ]
}

sonarqube {
    skipProject = true
}

dependencies {
    def seleniumVersion = "${seleniumVersion}"

    compile project(":mail-stub")
    compile project(":webcert-web")

    compile "se.inera.intyg.common:common-specifications:${commonVersion}"

    compile "com.jayway.awaitility:awaitility:${awaitilityVersion}"

    fitnesse "com.jayway.awaitility:awaitility:${awaitilityVersion}"
    fitnesse "se.inera.intyg.common:common-specifications:${commonVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-support:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-safari-driver:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-remote-driver:${seleniumVersion}"
    fitnesse "org.seleniumhq.selenium:selenium-htmlunit-driver:${seleniumVersion}"
}
