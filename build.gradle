ext {
    commonVersion = System.properties['commonVersion'] ?: '0-SNAPSHOT'
    typerVersion = System.properties['typerVersion'] ?: '0-SNAPSHOT'

    ppSchemasVersion = "1.0.4"
    ppTermsSchemasVersion = "1.0.4"
    rivtaItintegrationSchemasVersion = "1.0.0.4"
    healthcondSchemasVersion = "2.0.RC6.2"
    healthreportingSchemasVersion = "3.1.0.4"
    insurancemedicinedecisionsupportSchemasVersion = "1.0.1"
    rivtaItintegrationMonitoringSchemasVersion = "1.0.0.3"
    funktionstjansterGrpSchemasVersion = "1.0.3"
    ehrLogstoreSchemasVersion = "1.2.4"
    rivtaResidentMasterSchemasVersion = "1.1.3.5"
    springVersion = "4.2.2.RELEASE"
    springSecurityVersion = "4.0.3.RELEASE"
    springDataJpaVersion = "1.9.0.RELEASE"
    activeMqVersion = "5.13.4"
    camelVersion = "2.16.0"
    hamcrestVersion = "1.3"
    cxfVersion = "3.1.3"
    jsonSchemaValidatorVersion = "2.8.0"
    restassuredVersion = "2.8.0"
    servletApiVersion = "3.1.0"
    springockitoVersion = "1.0.8"
    xmlUnitVersion = "1.4"
    stAntlr4Version = "4.0.8"
    opensamlVersion = "2.5.3"
    openWsVersion = "1.4.2-1"
    xmlToolingVersion = "1.3.2"
    jaxrsVersion = "1.5.4"
    luceneAnalyzersCommonVersion = "4.10.2"
    saml2CoreVersion = "1.0.1.RELEASE"
    servletApiVersion = "2.5"
    autovalueVersion = "1.1"
    geronimoJmsVersion = "1.1.1"
    awaitilityVersion = "1.4.0"
    seleniumVersion = "2.52.0"
    jadiraUserTypeVersion = "5.0.0.GA"
    commonsIoVersion = "2.4"
    geronimoJmsVersion = "1.1.1"
    servletApiVersion = "2.5"
    springockitoVersion = "1.0.8"
    javaxWsRsApiVersion = "2.0.1"
    xmlUnitVersion = "1.4"
    aspectJWeaverVersion = "1.7.1"
    javaxMailVersion = "1.4"
    dbUnitVersion = "2.4.9"
    ehCacheVersion = "2.10.0"
    liquibaseVersion = "3.3.5"

    mockitoVersion = "1.9.0"
    mysqlVersion = "5.1.39"
    h2Version = "1.3.176"
}

allprojects {
    group = 'se.inera.intyg.webcert'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    apply plugin: 'inera-intyg'
    apply plugin: 'maven'
    apply plugin: 'org.ajoberstar.grgit'
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task createVersionPropertyFile(type: VersionPropertyFileTask) {
        useBuildTime = true
    }

    task unzipBuildTools(type: Copy) {
        description 'Extracts common-build-tools'
        into "$buildDir/build-tools/"
        from {
            configurations.buildtools.collect { zipTree(it) }
        }
    }

    apply plugin: 'checkstyle'

    checkstyle {
        config = resources.text.fromFile("${buildDir}/build-tools/checkstyle/checkstyle.xml")
        ignoreFailures = false
        showViolations = true
    }

    checkstyleMain.onlyIf { project.hasProperty('codeQuality') }
    checkstyleMain.dependsOn unzipBuildTools
    checkstyleMain.source = "src/main/java"
    checkstyleMain.ignoreFailures = false
    checkstyleTest.enabled = false

    apply plugin: 'jacoco'

    jacoco {
        toolVersion = "0.7.6.201602180812"
    }

    test {
        jacoco {
            destinationFile = file("$buildDir/jacoco/test.exec")
        }
    }

    uploadArchives {
        repositories.mavenDeployer {
            pom.whenConfigured { pom ->
                pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.common' }.each {
                    it.version = findResolvedVersion(project, 'se.inera.intyg.common')
                }
                pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.intygstyper' }.each {
                    it.version = findResolvedVersion(project, 'se.inera.intyg.intygstyper')
                }
            }
            repository(url: "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases") {
                authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
            }
        }
    }

    install {
        repositories.mavenInstaller {
            pom.whenConfigured { pom ->
                pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.common' }.each {
                    it.version = findResolvedVersion(project, 'se.inera.intyg.common')
                }
                pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.intygstyper' }.each {
                    it.version = findResolvedVersion(project, 'se.inera.intyg.intygstyper')
                }
            }
        }
    }

    configurations {
        buildtools
    }

    dependencies {
        buildtools "se.inera.intyg.common:common-build-tools:${commonVersion}"

        testCompile 'junit:junit:4.+'
        testCompile "org.mockito:mockito-core:${mockitoVersion}"
    }

    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots/" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }

}

task tagRelease(type: TagReleaseTask)
                      
task testReport(type: SharedTestReportTask)

apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property "sonar.jacoco.reportPath", "$buildDir/jacoco/test.exec"
        property "sonar.projectName", "Webcert"
        property "sonar.projectKey", "webcert"
        property "sonar.host.url", System.properties['sonarUrl'] ?: "https://build-inera.nordicmedtest.se/sonar"
        property "sonar.test.exclusions", "src/test/**"
        property "sonar.exclusions", [
            "**/stub/**",
            "**/exception/**",
            "**/*Exception*.java",
            "**/*Fake*.java",
            "**/templates.js",
            "**/vendor/**",
            "**/swagger-ui/**"
            ]
        property "sonar.javascript.lcov.reportPath", "build/karma/lcov.info"
    }
}

buildscript {
    dependencies {
        classpath 'se.inera.intyg:gradle-intyg-plugin:1.0.+'
        classpath 'se.inera.intyg:gradle-fitnesse-plugin:1.0.+'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.+"
        classpath 'org.ajoberstar:gradle-git:1.+'
        classpath 'org.akhikhl.gretty:gretty:+'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.+'
        classpath 'com.moowork.gradle:gradle-grunt-plugin:0.+'
    }

    repositories {
        mavenLocal()
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/releases/" }
        maven { url "https://build-inera.nordicmedtest.se/nexus/content/repositories/snapshots/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}
