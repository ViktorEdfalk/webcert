description = 'Webcert (Web)'

apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.moowork.grunt'
apply plugin: 'com.moowork.node'

grunt {
  colors = true
}

node {
  version = '0.12.4'
  download = true
  distBaseUrl = 'https://build-inera.nordicmedtest.se/node/'
}

sourceSets {
  main {
    resources {
      exclude '**/*.scss'
      exclude '**/*.spec.js'
      exclude '**/*.test.js'
      exclude '**/karma*.conf.js'
      exclude '**/karma*.conf.ci.js'
    }
  }
}

// TODO: just for now. Pin bootstrap version.
configurations.all {
  resolutionStrategy {
    force 'org.webjars:bootstrap:3.1.1'
  }
}

// TODO: this list should not be required, copy dependencies whose group is org.webjars instead
List webjars = [[group: 'org.webjars', name: 'angularjs', version: '1.4.10'],
                [group: 'org.webjars', name: 'angular-ui-bootstrap', version: '0.12.1'],
                [group: 'org.webjars', name: 'angular-ui-router', version: '0.2.15'],
                [group: 'org.webjars', name: 'bootstrap', version: '3.1.1'],
                [group: 'org.webjars', name: 'momentjs', version: '2.7.0'],
                [group: 'org.webjars', name: 'jquery', version: '1.9.0'],
                [group: 'se.inera.intyg.common', name: 'common-web']]

task unzipWebjars(type: Copy) {
    description 'Copies anything that is a webjar from the classpath and expands it so that we can use their static resources with karma'
    into "$buildDir/webjars/"
    from {
        configurations.compile.filter{file ->
            webjars.any{jar -> file.name.startsWith(jar.name) }
        }.collect{zipTree(it)}
    }
}

task moveJsFiles(type: Copy, dependsOn: unzipWebjars) {
  description 'Moves everything up one level, which gets rid of version directory (angular/1.2.4/* -> angular/)'
  from { "${buildDir}/webjars/META-INF/resources/webjars/" }
  eachFile {details ->
    details.path = details.path.replaceAll('([^/]+)/[0-9.]+(/.*)', '$1$2')
  }
  into "${buildDir}/webjars"
}

task jsTests(type: NodeTask, dependsOn: [npmInstall, moveJsFiles]) {
    script = file('node_modules/grunt-cli/bin/grunt')
    args = ['test']
}

test.dependsOn(jsTests)

task jsInclude(type: NodeTask, dependsOn: [npmInstall]) {
    script = file('node_modules/grunt-cli/bin/grunt')
    args = ['default']
}

war.dependsOn(jsInclude)

war {
  from( "${buildDir}/apps" )
}

test {
  exclude '**/*IT*'
}

// TODO: make run of integration tests configurable
task integrationTest(type: Test) {
  include '**/*IT*'
}

gretty {
  contextPath = '/'
  httpPort = 9088

  contextConfigFile = file("src/main/webapp/WEB-INF/jetty-web.xml")

  jvmArgs = [
    "-Dcatalina.base=${buildDir}/catalina.base",
    "-Dspring.profiles.active=dev",
    "-Dwebcert.resources.folder=${projectDir}/../src/main/resources",
    "-Dcredentials.file=${projectDir}/webcert-credentials.properties",
    "-Dwebcert.config.file=${projectDir}/webcert-dev.properties",
    "-Dwebcert.logback.file=${projectDir}/webcert-logback.xml",
  ]

  // TODO: use?
  //   debugSuspend = false
  //   recompileOnSourceChange = false
  //   reloadOnClassChange = false
  //   reloadOnConfigChange = false
  //   reloadOnLibChange = false
}

// TODO: buildNumber must be taken from environment
task createVersionPropertyFile(dependsOn: processResources) << {
  def propertyFile = "${buildDir}/resources/main/version.properties"
  ant.touch(file: propertyFile, mkdirs: "true")
  ant.propertyfile(file: propertyFile) {
    entry(key: 'project.version', default: rootProject.version)
    entry(key: 'buildTime', default: new Date())
    entry(key: 'buildNumber', default: '6a25a6bf58687fd2a9250e413ae8050cfe534c3f')
  }
}

war.dependsOn createVersionPropertyFile

// TODO: This is required to make the Schematron implementation pick up Saxon instead of Xalan.
// See if there is a less drastic solution.
configurations {
  runtime {
    exclude group: 'xalan', module: 'xalan'
  }
}

buildscript {
  repositories {
    jcenter()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }

  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
    classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
    classpath 'com.moowork.gradle:gradle-grunt-plugin:0.12'
  }
}

dependencies {
  compile project(':webcert-persistence')
  compile project(':pu-integration')
  compile project(':pp-integration')
  compile project(':fk-stub')
  compile project(':fmb-integration')
  compile project(':notification-stub')
  compile project(':intygstjanst-stub')
  compile project(':mail-stub')
  compile project(':notification-sender')

  compile 'se.inera.intyg.common:common-support:0-SNAPSHOT'
  compile 'se.inera.intyg.common:common-web:0-SNAPSHOT'
  compile 'se.inera.intyg.common:logging-util:0-SNAPSHOT'
  compile 'se.inera.intyg.common:hsa-integration:0-SNAPSHOT'
  compile 'se.inera.intyg.common:common-services:0-SNAPSHOT'
  compile 'se.inera.intyg.common:loggtjanst-stub:0-SNAPSHOT'
  compile 'se.inera.intyg.common:log-messages:0-SNAPSHOT'
  compile 'se.inera.intyg.common:security-siths:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:ts-bas:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:ts-diabetes:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:fk-parent:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:luse:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:lisu:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:luae_na:0-SNAPSHOT'
  compile 'se.inera.intyg.intygstyper:luae_fs:0-SNAPSHOT'
  compile 'se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:2.0.RC5.1'
  compile 'se.riv.insuranceprocess.healthreporting:insuranceprocess-healthreporting-schemas:3.1.0.1'
  compile 'se.riv.itintegration.monitoring:itintegration-monitoring-schemas:1.0.0.1'
  compile 'se.riv.ehr.logstore:ehr-logstore-schemas:1.2.1'
  compile 'se.riv.processmanagement.decisionsupport.insurancemedicinedecisionsupport:processmanagement-decisionsupport-insurancemedicinedecisionsupport-schemas:1.0.RC4.1'
  compile 'se.riv.infrastructure.directory.employee:infrastructure-directory-employee-schemas:1.0.RC4.1'
  compile 'se.inera.intyg.insuranceprocess.healthreporting:intyg-insuranceprocess-healthreporting-schemas:1.0.1'
  compile 'se.inera.intyg.transportstyrelsen:intyg-transportstyrelsen-schemas:1.0.1'
  compile 'se.inera.intyg.infrastructure.directory.privatepractitioner.terms:intyg-infrastructure-directory-privatepractitioner-terms-schemas:1.0.1'
  compile 'se.funktionstjanster.grp:funktionstjanster-grp-schemas:1.0.1'
  compile 'ch.qos.logback:logback-classic:1.0.11'
  compile 'org.slf4j:slf4j-api:1.7.5'
  compile 'org.slf4j:jcl-over-slf4j:1.7.5'
  compile 'org.slf4j:log4j-over-slf4j:1.7.5'
  compile 'org.webjars:angularjs:1.4.10'
  compile 'org.webjars:angular-ui-bootstrap:1.3.2'
  compile 'org.webjars:angular-ui-router:0.2.15'
  compile 'org.webjars:bootstrap:3.1.1'
  compile 'org.aspectj:aspectjrt:1.7.1'
  compile 'org.aspectj:aspectjweaver:1.7.1'
  compile 'commons-collections:commons-collections:3.2.1'
  compile 'commons-lang:commons-lang:2.6'
  compile 'commons-io:commons-io:2.4'
  compile 'org.eclipse.jetty:apache-jstl:9.3.6.v20151106'
  compile 'org.apache.cxf:cxf-rt-transports-http:3.1.3'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.4'
  compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.4'
  compile 'org.springframework:spring-aop:4.2.2.RELEASE'
  compile 'org.springframework:spring-web:4.2.2.RELEASE'
  compile 'org.springframework:spring-webmvc:4.2.2.RELEASE'
  compile 'org.springframework:spring-context:4.2.2.RELEASE'
  compile 'org.springframework:spring-context-support:4.2.2.RELEASE'
  compile 'org.springframework:spring-jms:4.2.2.RELEASE'
  compile 'org.springframework:spring-tx:4.2.2.RELEASE'
  compile 'org.apache.lucene:lucene-core:4.10.2'
  compile 'org.apache.lucene:lucene-analyzers-common:4.10.2'
  compile (group: 'se.inera.intyg.intygstyper', name:'fk7263', version: '0-SNAPSHOT') {
    exclude(module: 'insuranceprocess-healthreporting-schemas')
    exclude(module: 'fk-vardgivare-sjukvard-schemas')
    exclude(module: 'ServiceContracts_itintegration_monitoring')
  }
  compile(group: 'xalan', name: 'xalan', version:'2.7.1') {
    exclude(module: 'xml-apis')
  }
  compile(group: 'org.springframework.security', name: 'spring-security-config', version:'4.0.3.RELEASE') {
    exclude(module: 'spring-core')
    exclude(module: 'spring-aop')
    exclude(module: 'spring-beans')
  }
  compile(group: 'org.springframework.security', name: 'spring-security-web', version:'4.0.3.RELEASE') {
    exclude(module: 'spring-expression')
    exclude(module: 'spring-aop')
    exclude(module: 'spring-jdbc')
    exclude(module: 'spring-core')
    exclude(module: 'spring-beans')
    exclude(module: 'spring-tx')
  }
  compile(group: 'org.springframework.security', name: 'spring-security-taglibs', version:'4.0.3.RELEASE') {
    exclude(module: 'spring-core')
    exclude(module: 'spring-aop')
    exclude(module: 'spring-beans')
    exclude(module: 'spring-expression')
    exclude(module: 'spring-jdbc')
    exclude(module: 'spring-tx')
  }
  compile(group: 'org.springframework.security.extensions', name: 'spring-security-saml2-core', version:'1.0.1.RELEASE') {
    exclude(module: 'opensaml')
    exclude(module: 'xercesImpl')
  }
  compile(group: 'org.opensaml', name: 'opensaml', version:'2.5.3') {
    exclude(module: 'openws')
  }
  compile(group: 'org.opensaml', name: 'openws', version:'1.4.2-1') {
    exclude(module: 'xmltooling')
  }
  compile(group: 'org.opensaml', name: 'xmltooling', version:'1.3.2') {
    exclude(module: 'xml-apis')
  }
  compile(group: 'io.swagger', name: 'swagger-jaxrs', version:'1.5.4') {
    exclude(module: 'jsr311-api')
  }

  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile 'org.springframework:spring-test:4.2.2.RELEASE'
  testCompile 'javax.servlet:javax.servlet-api:3.1.0'
  testCompile 'org.kubek2k:springockito:1.0.8'
  testCompile 'xmlunit:xmlunit:1.4'
  testCompile 'com.h2database:h2:1.3.174'
  testCompile 'com.jayway.restassured:rest-assured:2.8.0'
  testCompile 'com.jayway.restassured:json-schema-validator:2.8.0'
  testCompile 'org.antlr:ST4:4.0.8'
  testCompile(group: 'org.mockito', name: 'mockito-core', version:'1.9.0') {
    exclude(module: 'hamcrest-core')
  }
  testCompile(group: 'junit', name: 'junit', version:'4.12') {
    exclude(module: 'hamcrest-core')
  }

  providedCompile 'javax.servlet:servlet-api:2.5'
  providedCompile 'com.google.auto.value:auto-value:1.1'
  providedCompile 'org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1.1'

  gretty 'org.apache.activemq:activemq-client:5.13.0'
  gretty 'org.apache.activemq:activemq-broker:5.13.0'
  gretty "com.h2database:h2:1.3.174"
  gretty "mysql:mysql-connector-java:5.1.24"
}
