description = 'Webcert (Web)'

apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.moowork.grunt'
apply plugin: 'com.moowork.node'

grunt {
  colors = true
}

node {
  version = '0.12.4'
  download = true
  distBaseUrl = 'https://build-inera.nordicmedtest.se/node/'
}

// TODO: these still show up in the built war file.
sourceSets {
  main {
    resources {
      exclude '**/*.scss'
      exclude '**/*.spec.js'
      exclude '**/*.test.js'
      exclude '**/karma*.conf.js'
      exclude '**/karma*.conf.ci.js'
    }
  }
}

// TODO: just for now. Pin bootstrap version.
configurations.all {
  resolutionStrategy {
    force 'org.webjars:bootstrap:3.1.1'
  }
}

// TODO: this list should not be required, copy dependencies whose group is org.webjars instead
List webjars = [[group: 'org.webjars', name: 'angularjs', version: '1.4.10'],
                [group: 'org.webjars', name: 'angular-ui-bootstrap', version: '0.12.1'],
                [group: 'org.webjars', name: 'angular-ui-router', version: '0.2.15'],
                [group: 'org.webjars', name: 'bootstrap', version: '3.1.1'],
                [group: 'org.webjars', name: 'momentjs', version: '2.7.0'],
                [group: 'org.webjars', name: 'jquery', version: '1.9.0'],
                [group: 'se.inera.intyg.common', name: 'common-web']]

task unzipWebjars(type: Copy) {
    description 'Copies anything that is a webjar from the classpath and expands it so that we can use their static resources with karma'
    into "$buildDir/webjars/"
    from {
        configurations.compile.filter{file ->
            webjars.any{jar -> file.name.startsWith(jar.name) }
        }.collect{zipTree(it)}
    }
}

task moveJsFiles(type: Copy, dependsOn: unzipWebjars) {
  description 'Moves everything up one level, which gets rid of version directory (angular/1.2.4/* -> angular/)'
  from { "${buildDir}/webjars/META-INF/resources/webjars/" }
  eachFile {details ->
    details.path = details.path.replaceAll('([^/]+)/[0-9.]+(/.*)', '$1$2')
  }
  into "${buildDir}/webjars"
}

task jsTests(type: NodeTask, dependsOn: [npmInstall, moveJsFiles]) {
    script = file('node_modules/grunt-cli/bin/grunt')
    args = ['test']
}

test.dependsOn(jsTests)

task unzipBuildTools(type: Copy) {
  description 'Extracts common-build-tools'
  into "$buildDir/build-tools/"
  from {
    configurations.buildtools.collect { zipTree(it) }
  }
}

task jsInclude(type: NodeTask, dependsOn: [npmInstall, unzipBuildTools]) {
    script = file('node_modules/grunt-cli/bin/grunt')
    args = ['default']
}

war.dependsOn(jsInclude)

war {
  from( "${buildDir}/apps" )
}

test {
  exclude '**/*IT*'
}

// TODO: make run of integration tests configurable
task integrationTest(type: Test) {
  include '**/*IT*'
}

gretty {
  contextPath = '/'
  httpPort = 9088

  contextConfigFile = file("src/main/webapp/WEB-INF/jetty-web.xml")

  jvmArgs = [
    "-Dcatalina.base=${buildDir}/catalina.base",
    "-Dspring.profiles.active=dev",
    "-Dwebcert.resources.folder=${projectDir}/../src/main/resources",
    "-Dcredentials.file=${projectDir}/webcert-credentials.properties",
    "-Dwebcert.config.file=${projectDir}/webcert-dev.properties",
    "-Dwebcert.logback.file=${projectDir}/webcert-logback.xml",
    "-Dwebcert.useMinifiedJavaScript=false",
    "-Dh2.tcp.port=9094",
    "-Dh2.web.port=9090",
    "-Djetty.port=9088"
  ]

  // TODO: b√§ttre namn. Synka med gruntfilen.
  extraResourceBase 'build/apps/'

  // TODO: use?
  //   debugSuspend = false
  //   recompileOnSourceChange = false
  //   reloadOnClassChange = false
  //   reloadOnConfigChange = false
  //   reloadOnLibChange = false
}

war.dependsOn createVersionPropertyFile

// TODO: This is required to make the Schematron implementation pick up Saxon instead of Xalan.
// See if there is a less drastic solution.
configurations {
  runtime {
    exclude group: 'xalan', module: 'xalan'
  }
  buildtools
}

buildscript {
  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
    classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
    classpath 'com.moowork.gradle:gradle-grunt-plugin:0.12'
  }
}

dependencies {
  buildtools "se.inera.intyg.common:common-build-tools:${commonVersion}"

  compile project(':webcert-persistence')
  compile project(':pu-integration')
  compile project(':pp-integration')
  compile project(':fk-stub')
  compile project(':fmb-integration')
  compile project(':notification-stub')
  compile project(':intygstjanst-stub')
  compile project(':mail-stub')
  compile project(':notification-sender')

  compile 'se.inera.intyg.infrastructure.directory.privatepractitioner.terms:intyg-infrastructure-directory-privatepractitioner-terms-schemas:1.0.2'
  compile 'se.funktionstjanster.grp:funktionstjanster-grp-schemas:1.0.2'

  compile "se.inera.intyg.common:loggtjanst-stub:${commonVersion}"
  compile "se.inera.intyg.common:security-siths:${commonVersion}"

  compile "se.inera.intyg.intygstyper:ts-bas:${typerVersion}"
  compile "se.inera.intyg.intygstyper:ts-diabetes:${typerVersion}"
  compile "se.inera.intyg.intygstyper:fk-parent:${typerVersion}"
  compile "se.inera.intyg.intygstyper:luse:${typerVersion}"
  compile "se.inera.intyg.intygstyper:lisu:${typerVersion}"
  compile "se.inera.intyg.intygstyper:luae_na:${typerVersion}"
  compile "se.inera.intyg.intygstyper:luae_fs:${typerVersion}"
  compile (group: "se.inera.intyg.intygstyper", name:"fk7263", version: "${typerVersion}") {
    exclude(module: "insuranceprocess-healthreporting-schemas")
    exclude(module: "fk-vardgivare-sjukvard-schemas")
    exclude(module: "ServiceContracts_itintegration_monitoring")
  }

  compile 'org.springframework:spring-web:4.2.2.RELEASE'
  compile 'org.springframework:spring-webmvc:4.2.2.RELEASE'
  compile 'org.apache.lucene:lucene-analyzers-common:4.10.2'

  compile 'org.springframework.security:spring-security-config:4.0.3.RELEASE'
  compile 'org.springframework.security:spring-security-web:4.0.3.RELEASE'
  compile 'org.springframework.security:spring-security-taglibs:4.0.3.RELEASE'
  compile 'org.springframework.security.extensions:spring-security-saml2-core:1.0.1.RELEASE'

  compile(group: 'org.opensaml', name: 'opensaml', version:'2.5.3') {
    exclude(module: 'openws')
  }
  compile(group: 'org.opensaml', name: 'openws', version:'1.4.2-1') {
    exclude(module: 'xmltooling')
  }
  compile(group: 'org.opensaml', name: 'xmltooling', version:'1.3.2') {
    exclude(module: 'xml-apis')
  }
  compile(group: 'io.swagger', name: 'swagger-jaxrs', version:'1.5.4') {
    exclude(module: 'jsr311-api')
  }

  testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"
  testCompile 'org.springframework:spring-test:4.2.2.RELEASE'
  testCompile 'javax.servlet:javax.servlet-api:3.1.0'
  testCompile 'org.kubek2k:springockito:1.0.8'
  testCompile 'xmlunit:xmlunit:1.4'
  testCompile 'com.jayway.restassured:rest-assured:2.8.0'
  testCompile 'com.jayway.restassured:json-schema-validator:2.8.0'
  testCompile 'org.antlr:ST4:4.0.8'

  testRuntime 'com.h2database:h2:1.3.174'

  providedCompile 'javax.servlet:servlet-api:2.5'
  providedCompile 'com.google.auto.value:auto-value:1.1'
  providedCompile 'org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1.1'

  gretty 'org.apache.activemq:activemq-client:5.13.0'
  gretty 'org.apache.activemq:activemq-broker:5.13.0'
  gretty "com.h2database:h2:1.3.174"
  gretty "mysql:mysql-connector-java:5.1.24"
}
