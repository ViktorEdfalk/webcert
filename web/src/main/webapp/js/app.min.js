function loadCssFromUrl(url){"use strict";var link=document.createElement("link");link.type="text/css",link.rel="stylesheet",link.href=url,document.getElementsByTagName("head")[0].appendChild(link)}function loadScriptFromUrl(url){"use strict";var result=$.Deferred(),script=document.createElement("script");return script.async="async",script.type="text/javascript",script.src=url,script.onload=script.onreadystatechange=function(_,isAbort){(!script.readyState||/loaded|complete/.test(script.readyState))&&(isAbort?result.reject():result.resolve())},script.onerror=function(){result.reject()},document.getElementsByTagName("head")[0].appendChild(script),result.promise()}window.name="NG_DEFER_BOOTSTRAP!";var app=angular.module("webcert",["ui.bootstrap","ngCookies","ngRoute","ngSanitize","common"]);app.config(["$routeProvider",function($routeProvider){"use strict";$routeProvider.when("/create/index",{templateUrl:"/views/dashboard/create.choose-patient.html",controller:"webcert.InitCertCtrl"}).when("/create/choose-patient/index",{templateUrl:"/views/dashboard/create.choose-patient.html",controller:"webcert.ChoosePatientCtrl"}).when("/create/edit-patient-name/:mode",{templateUrl:"/views/dashboard/create.edit-patient-name.html",controller:"webcert.EditPatientNameCtrl"}).when("/create/choose-cert-type/index",{templateUrl:"/views/dashboard/create.choose-cert-type.html",controller:"webcert.ChooseCertTypeCtrl"}).when("/unhandled-qa",{templateUrl:"/views/dashboard/unhandled-qa.html",controller:"webcert.UnhandledQACtrl"}).when("/unsigned",{templateUrl:"/views/dashboard/unsigned.html",controller:"webcert.UnsignedCertCtrl"}).when("/intyg/:certificateType/:certificateId",{templateUrl:"/views/dashboard/view.certificate.html",controller:"webcert.ViewCertCtrl"}).when("/fragasvar/:certificateType/:certificateId/:qaOnly?",{templateUrl:"/views/dashboard/view.qa.html",controller:"webcert.ViewCertCtrl"}).when("/webcert/about",{templateUrl:"/views/dashboard/about.webcert.html",controller:"webcert.AboutWebcertCtrl"}).when("/support/about",{templateUrl:"/views/dashboard/about.support.html",controller:"webcert.AboutWebcertCtrl"}).when("/certificates/about",{templateUrl:"/views/dashboard/about.certificates.html",controller:"webcert.AboutWebcertCtrl"}).when("/faq/about",{templateUrl:"/views/dashboard/about.faq.html",controller:"webcert.AboutWebcertCtrl"}).when("/cookies/about",{templateUrl:"/views/dashboard/about.cookies.html",controller:"webcert.AboutWebcertCtrl"}).otherwise({redirectTo:"/create/index"})}]),app.config(["$httpProvider","common.http403ResponseInterceptorProvider",function($httpProvider,http403ResponseInterceptorProvider){"use strict";$httpProvider.interceptors.push("common.httpRequestInterceptorCacheBuster"),http403ResponseInterceptorProvider.setRedirectUrl("/error.jsp?reason=denied"),$httpProvider.responseInterceptors.push("common.http403ResponseInterceptor")}]),app.config(["$provide",function($provide){"use strict";$provide.decorator("ngModelDirective",["$delegate",function($delegate){var ngModel=$delegate[0],controller=ngModel.controller;return ngModel.controller=["$scope","$element","$attrs","$injector",function(scope,element,attrs,$injector){var $interpolate=$injector.get("$interpolate");attrs.$set("name",$interpolate(attrs.name||"")(scope)),$injector.invoke(controller,this,{$scope:scope,$element:element,$attrs:attrs})}],$delegate}]),$provide.decorator("formDirective",["$delegate",function($delegate){var form=$delegate[0],controller=form.controller;return form.controller=["$scope","$element","$attrs","$injector",function(scope,element,attrs,$injector){var $interpolate=$injector.get("$interpolate");attrs.$set("name",$interpolate(attrs.name||attrs.ngForm||"")(scope)),$injector.invoke(controller,this,{$scope:scope,$element:element,$attrs:attrs})}],$delegate}])}]),app.constant("datepickerConfig",{formatDay:"dd",formatMonth:"MMMM",formatYear:"yyyy",formatDayHeader:"EEE",formatDayTitle:"MMMM yyyy",formatMonthTitle:"yyyy",datepickerMode:"day",minMode:"day",maxMode:"year",showWeeks:!0,startingDay:1,yearRange:20,minDate:null,maxDate:null}),app.constant("datepickerPopupConfig",{datepickerPopup:"yyyy-MM-dd",currentText:"Idag",clearText:"Rensa",closeText:"OK",closeOnDateSelection:!0,appendToBody:!1,showButtonBar:!0}),app.run(["$rootScope","common.messageService","common.User",function($rootScope,messageService,User){"use strict";$rootScope.lang="sv",$rootScope.DEFAULT_LANG="sv",User.setUserContext(MODULE_CONFIG.USERCONTEXT),messageService.addResources(wcMessages)}]),$.get("/api/modules/map").then(function(modules){"use strict";var modulesIds=[],modulePromises=[];"true"===MODULE_CONFIG.USE_MINIFIED_JAVASCRIPT?modulePromises.push(loadScriptFromUrl("/web/webjars/common/webcert/js/module.min.js?"+MODULE_CONFIG.BUILD_NUMBER)):(modulePromises.push(loadScriptFromUrl("/web/webjars/common/webcert/js/module.js")),modulePromises.push($.get("/web/webjars/common/webcert/js/module-deps.json")),modulePromises.push($.get("/js/app-deps.json")),$.ajaxSetup({cache:!0})),angular.forEach(modules,function(module){modulesIds.push(module.id),loadCssFromUrl(module.cssPath+"?"+MODULE_CONFIG.BUILD_NUMBER),"true"===MODULE_CONFIG.USE_MINIFIED_JAVASCRIPT?modulePromises.push(loadScriptFromUrl(module.scriptPath+".min.js?"+MODULE_CONFIG.BUILD_NUMBER)):(modulePromises.push(loadScriptFromUrl(module.scriptPath+".js")),modulePromises.push($.get(module.dependencyDefinitionPath)))}),$.when.apply(this,modulePromises).then(function(){var dependencyPromises=[];"false"===MODULE_CONFIG.USE_MINIFIED_JAVASCRIPT&&angular.forEach(arguments,function(data){void 0!==data&&data[0]instanceof Array&&angular.forEach(data[0],function(depdendency){dependencyPromises.push(loadScriptFromUrl(depdendency))})}),$.when.apply(this,dependencyPromises).then(function(){angular.element().ready(function(){angular.resumeBootstrap([app.name,"common"].concat(Array.prototype.slice.call(modulesIds,0)))})}).fail(function(error){console.log(error)})}).fail(function(error){console.log(error)})});var wcMessages={sv:{"webcert.header":"Webcert","webcert.description":"Välkommen till Webcert.","dashboard.title":"Mina andra enheter","dashboard.unanswered.title":"Frågor och svar","dashboard.unsigned.title":"Ej signerade utkast","dashboard.about.title":"Om Webcert","label.default-cert-type":"Välj typ av intyg","label.unsignedcerts":"Ej signerade intyg","label.unansweredcerts":"Intyg med ej hanterad fråga","label.readytosigncerts":"Intyg färdiga att signera (massignering)","label.showallcerts":"Visa alla intyg","label.showfewercerts":"Visa färre intyg","label.patient":"Patient:","label.signselectedcerts":"Signera valda intyg","label.confirmaddress":"Återanvänd uppgifter","label.confirmsign":"Signera intyget","label.copycert":"Kopiera intyg","print.label.signed":"Observera! Detta är en webbutskrift av intyget och är därför inte giltigt som intyg.","print.label.draft":"Observera! Intyget är ett utkast och är därför inte giltigt.","print.label.revoked":"Observera! Intyget är makulerat och därför inte giltigt.","label.makulera":"Makulera intyg","label.makulera.body":"Välj hur du vill makulera intyget.","label.makulera.confirmation":"Kvittens - Återtaget intyg","label.qaonlywarning":"Du har valt att lämna frågor och svar","label.qaonlywarning.body":"<p>Observera att intyg ska utfärdas via journalsystemet och inte via Webcert.</p><p>Information i Webcert som inte är frågor och svar kan inte visas i journalsystemet.</p>","certificatetypes.fk7263.typename":"Läkarintyg FK 7263","certificatetypes.rli.typename":"Intyg vid avbeställd resa","certificatetypes.ts-bas.typename":"Transportstyrelsens läkarintyg","certificatetypes.ts-diabetes.typename":"Transportstyrelsens läkarintyg, diabetes","certificatetypes.ts-bas.helptext":'<p>Transportstyrelsen läkarintyg ska användas vid förlängd giltighet av högre behörighet från 45 år, ansökan om körkortstillstånd för grupp II och III och vid ansökan om taxiförarlegitimation. Transportstyrelsen läkarintyg kan även användas när Transportstyrelsen i annat fall begärt ett allmänt läkarintyg avseende lämplighet att inneha körkort.</p>Specialistintyg finns bl.a. för alkohol, läkemedel, synfunktion, Alkolås m.m. Se <a href="http://www.transportstyrelsen.se" target="_blank">www.transportstyrelsen.se</a> därefter "Väg" och "Trafikmedicin".',"certificatetypes.ts-diabetes.helptext":'<p>Läkarintyg, diabetes ska användas vid diabetessjukdom. Föreskrivna krav på läkarens specialistkompetens vid diabetessjukdom framgår av 17 kap. i Transportstyrelsens föreskrifter (TSFS 2010:125) och allmänna råd om medicinska krav för innehav av körkort m.m.</p>Information om Transportstyrelsens föreskrifter finns under länken "Väg" och sedan länken "Trafikmedicin" på <a href="http://www.transportstyrelsen.se" target="_blank">www.transportstyrelsen.se</a>.',"certificatetypes.fk7263.helptext":"Läkarintyget används av Försäkringskassan för att bedöma om patienten har rätt till sjukpenning. Av intyget ska det framgå hur sjukdomen påverkar patientens arbetsförmåga och hur länge patienten behöver vara sjukskriven. Läkarintyg FK 7263 ska skrivas om patientens sjukskrivningsperiod beräknas överstiga 14 dagar.","certificatetypes.rli.helptext":"Här ska det ligga en text om intyg vid avbeställd resa","about.cookies":'<h3>Om kakor (cookies)</h3><p>Så kallade kakor (cookies) används för att underlätta för besökaren på webbplatsen. En kaka är en textfil som lagras på din dator och som innehåller information. Denna webbplats använder så kallade sessionskakor. Sessionskakor lagras temporärt i din dators minne under tiden du är inne på en webbsida. Sessionskakor försvinner när du stänger din webbläsare. Ingen personlig information om dig sparas vid användning av sessionskakor.</p><p>Om du inte accepterar användandet av kakor kan du stänga av det via din webbläsares säkerhetsinställningar. Du kan även ställa in webbläsaren så att du får en varning varje gång webbplatsen försöker sätta en kaka på din dator.</p><p><strong>Observera!</strong> Om du stänger av kakor i din webbläsare kan du inte logga in i Webcert.</p><p>Allmän information om kakor (cookies) och lagen om elektronisk kommunikation finns på Post- och telestyrelsens webbplats.</p><p><a href="http://www.pts.se/sv/Bransch/Regler/Lagar/Lag-om-elektronisk-kommunikation/Cookies-kakor/" target="_blank">Mer om kakor (cookies) på Post- och telestyrelsens webbplats</a></p>',"info.nounsignedcertsfound":"<strong>Inga ej signerade intyg hittades.</strong>","info.nounansweredcertsfound":"<strong>Inga intyg med ohanterade frågor hittades.</strong>","info.noreadytosigncertsfound":"<strong>Inga klarmarkerade intyg hittades.</strong>","info.loadingdata":"<strong>Uppdaterar lista...</strong>","info.nounanswered.qa.for.unit":"<strong>Inga ej hanterade frågor och svar för enheten.</strong>","info.nocertsfound":"<strong>Inga intyg hittades.</strong>","info.query.noresults":"<strong>Sökningen gav inga resultat.</strong>","info.query.error":"<strong>Sökningen kunde inte utföras.</strong>","info.certload.error":"<strong>Kunde inte hämta intyg.</strong>","info.running.query":"<strong>Söker...</strong>","error.unsignedcerts.couldnotbeloaded":"<strong>Kunde inte hämta ej signerade intyg.</strong>","error.unansweredcerts.couldnotbeloaded":"<strong>Kunde inte hämta listan med ej hanterade frågor och svar.</strong>","error.readytosigncerts.couldnotbeloaded":"<strong>Kunde inte hämta intyg klara för signering.</strong>","error.failedtocreateintyg":"Kunde inte skapa intyget. Försök igen senare.","error.failedtocancelintyg":"Kunde inte makulera intyget. Försök igen senare.","error.failedtocopyintyg":"Kunde inte kopiera intyget. Försök igen senare.","error.failedtosendintyg":"Kunde inte skicka intyget. Försök igen senare."},en:{"webcert.header":"Webcert Application (en)"}};angular.module("webcert").controller("webcert.AboutWebcertCtrl",function(){}),angular.module("webcert").controller("webcert.ChooseCertTypeCtrl",["$filter","$location","$log","$scope","$cookieStore","webcert.CreateCertificateDraft","common.dialogService","webcert.ManageCertificate",function($filter,$location,$log,$scope,$cookieStore,CreateCertificateDraft,dialogService,ManageCertificate){"use strict";CreateCertificateDraft.personnummer&&CreateCertificateDraft.fornamn&&CreateCertificateDraft.efternamn||$location.url("/create/index",!0),$scope.focusFirstInput=!0,$scope.widgetState={doneLoading:!0,activeErrorMessageKey:null,createErrorMessageKey:null,currentList:void 0},$scope.filterForm={intygFilter:"current"},$scope.personnummer=CreateCertificateDraft.personnummer,$scope.fornamn=CreateCertificateDraft.fornamn,$scope.mellannamn=CreateCertificateDraft.mellannamn,$scope.efternamn=CreateCertificateDraft.efternamn,$scope.intygType="default",$scope.certificateTypeText="",$scope.certTypes=[],ManageCertificate.getCertTypes(function(types){$scope.certTypes=types,$scope.intygType=CreateCertificateDraft.intygType}),$scope.updateCertList=function(){$scope.widgetState.currentList=$filter("TidigareIntygFilter")($scope.widgetState.certListUnhandled,$scope.filterForm.intygFilter)},ManageCertificate.getCertificatesForPerson($scope.personnummer,function(data){$scope.widgetState.doneLoading=!1,$scope.widgetState.certListUnhandled=data,$scope.updateCertList()},function(errorData){$scope.widgetState.doneLoading=!1,$log.debug("Query Error"+errorData),$scope.widgetState.activeErrorMessageKey="info.certload.error"}),$scope.createDraft=function(){CreateCertificateDraft.intygType=$scope.intygType,CreateCertificateDraft.createDraft(function(data){$scope.widgetState.createErrorMessageKey=void 0,$location.url("/"+CreateCertificateDraft.intygType+"/edit/"+data,!0)},function(error){$log.debug("Create draft failed: "+error.message),$scope.widgetState.createErrorMessageKey="error.failedtocreateintyg"})},$scope.changePatient=function(){$location.path("/create/index")},$scope.$watch("filterForm.intygFilter",function(){$scope.updateCertList()}),$scope.openIntyg=function(cert){$location.path("WC"===cert.source?"/"+cert.intygType+"/edit/"+cert.intygId:"/intyg/"+cert.intygType+"/"+cert.intygId)},ManageCertificate.initCopyDialog($scope),$scope.copyIntyg=function(cert){ManageCertificate.copy($scope,cert)}}]),angular.module("webcert").controller("webcert.ChoosePatientCtrl",["$location","$scope","webcert.CreateCertificateDraft","$timeout",function($location,$scope,CreateCertificateDraft){"use strict";$scope.widgetState={waiting:!1},$scope.focusPnr=!0,$scope.personnummer=CreateCertificateDraft.personnummer,$scope.lookupPatient=function(){var onSuccess=function(){$scope.widgetState.waiting=!1,$location.path("/create/choose-cert-type/index")},onNotFound=function(){$scope.widgetState.waiting=!1,$location.path("/create/edit-patient-name/notFound")},onError=function(){$scope.widgetState.waiting=!1,$location.path("/create/edit-patient-name/errorOccured")};$scope.widgetState.waiting=!0,CreateCertificateDraft.getNameAndAddress($scope.personnummer,onSuccess,onNotFound,onError)}}]),angular.module("webcert").controller("webcert.EditPatientNameCtrl",["$location","$routeParams","$scope","webcert.CreateCertificateDraft",function($location,$routeParams,$scope,CreateCertificateDraft){"use strict";CreateCertificateDraft.personnummer||$location.url("/create/choose-patient/index",!0),$scope.personnummer=CreateCertificateDraft.personnummer,$scope.fornamn=CreateCertificateDraft.fornamn,$scope.efternamn=CreateCertificateDraft.mellannamn?CreateCertificateDraft.mellannamn+" "+CreateCertificateDraft.efternamn:CreateCertificateDraft.efternamn,$scope.personNotFound="notFound"===$routeParams.mode,$scope.errorOccured="errorOccured"===$routeParams.mode,$scope.chooseCertType=function(){CreateCertificateDraft.fornamn=$scope.fornamn,CreateCertificateDraft.mellannamn=null,CreateCertificateDraft.efternamn=$scope.efternamn,$location.path("/create/choose-cert-type/index")},$scope.changePatient=function(){$location.path("/create/index")}}]),angular.module("webcert").controller("webcert.InitCertCtrl",["$location","webcert.CreateCertificateDraft",function($location,CreateCertificateDraft){"use strict";CreateCertificateDraft.reset(),$location.replace(!0),$location.path("/create/choose-patient/index")}]),angular.module("webcert").controller("webcert.UnhandledQACtrl",["$cookieStore","$filter","$location","$log","$scope","$timeout","$window","common.dialogService","common.fragaSvarCommonService","webcert.ManageCertificate","webcert.QuestionAnswer",function($cookieStore,$filter,$location,$log,$scope,$timeout,$window,dialogService,fragaSvarCommonService,ManageCertificate,QuestionAnswer){"use strict";function decorateList(list){angular.forEach(list,function(qa){fragaSvarCommonService.decorateSingleItemMeasure(qa)})}function prepareFilterQuery(enhetId,scopeFilterQuery){var filterQuery=angular.copy(scopeFilterQuery);return filterQuery.enhetId="wc-all"===enhetId?void 0:enhetId,filterQuery.vantarPa=$scope.filterForm.vantarPaSelector.value,$scope.filterForm.lakareSelector&&(filterQuery.hsaId=$scope.filterForm.lakareSelector.hsaId),filterQuery.changedFrom&&(filterQuery.changedFrom=$filter("date")(filterQuery.changedFrom,"yyyy-MM-dd")),filterQuery.changedTo&&(filterQuery.changedTo=$filter("date")(filterQuery.changedTo,"yyyy-MM-dd")),filterQuery.replyLatest&&(filterQuery.replyLatest=$filter("date")(filterQuery.replyLatest,"yyyy-MM-dd")),"FK"===$scope.filterForm.questionFrom?(filterQuery.questionFromFK=!0,filterQuery.questionFromWC=!1):"WC"===$scope.filterForm.questionFrom?(filterQuery.questionFromFK=!1,filterQuery.questionFromWC=!0):(filterQuery.questionFromFK=!1,filterQuery.questionFromWC=!1),filterQuery.vidarebefordrad="default"===$scope.filterForm.vidarebefordrad?void 0:$scope.filterForm.vidarebefordrad,filterQuery}function getQA(){$scope.widgetState.activeErrorMessageKey=null,$cookieStore.put("enhetsId",enhetId);var preparedQuery=prepareFilterQuery(enhetId,$scope.filterQuery);$cookieStore.put("savedFilterQuery",preparedQuery),$scope.filterQuery=preparedQuery,QuestionAnswer.getQA(preparedQuery,function(successData){$scope.widgetState.totalCount=successData.totalCount;var qaListQuery=[];if(0===$scope.filterQuery.startFrom)qaListQuery=successData.results,$scope.widgetState.currentList=qaListQuery,$scope.widgetState.runningQuery=!1;else{$scope.widgetState.fetchingMoreInProgress=!1,qaListQuery=$scope.widgetState.currentList;for(var i=0;i<successData.results.length;i++)qaListQuery.push(successData.results[i])}$scope.filterQuery.pageSize>PAGE_SIZE&&($scope.filterQuery.pageSize=PAGE_SIZE,$scope.filterQuery.startFrom=$scope.filterQuery.savedStartFrom,$scope.filterQuery.savedStartFrom=void 0),decorateList($scope.widgetState.currentList)},function(errorData){$log.debug("Query Error"+errorData),$scope.widgetState.runningQuery=!1,$scope.widgetState.activeErrorMessageKey="info.query.error"})}function selectVantarPaByValue(vantaValue){for(var count=0;count<$scope.statusList.length;count++)if($scope.statusList[count].value===vantaValue)return $scope.statusList[count];return $scope.statusList[0]}function resetFilterForm(){$cookieStore.remove("savedFilterQuery"),$scope.filterQuery=angular.copy(defaultQuery),$scope.filterForm.vantarPaSelector=$scope.statusList[1],$scope.filterForm.lakareSelector=$scope.lakareList[0],$scope.filterForm.questionFrom="default",$scope.filterForm.vidarebefordrad="default"}function loadSearchForm(){void 0===$cookieStore.get("savedFilterQuery")?resetFilterForm():($scope.filterQuery=$cookieStore.get("savedFilterQuery"),$scope.filterQuery.startFrom>0&&($scope.filterQuery.pageSize=$scope.filterQuery.startFrom+$scope.filterQuery.pageSize,$scope.filterQuery.savedStartFrom=$scope.filterQuery.startFrom,$scope.filterQuery.startFrom=0),$scope.filterForm.questionFrom=$scope.filterQuery.questionFromFK===!1&&$scope.filterQuery.questionFromWC===!1?"default":$scope.filterQuery.questionFromFK?"FK":"WC",$scope.filterForm.vidarebefordrad=void 0===$scope.filterQuery.vidarebefordrad?"default":$scope.filterQuery.vidarebefordrad,$scope.filterForm.vantarPaSelector=$scope.filterForm.vantarPaSelector?selectVantarPaByValue($cookieStore.get("savedFilterQuery").vantarPa):$scope.statusList[1])}function selectLakareByHsaId(hsaId){for(var count=0;count<$scope.lakareList.length;count++)if($scope.lakareList[count].hsaId===hsaId)return $scope.lakareList[count];return $scope.lakareList[0]}function initLakareList(unitId){$scope.widgetState.loadingLakares=!0,QuestionAnswer.getQALakareList("wc-all"===unitId?void 0:unitId,function(list){$scope.widgetState.loadingLakares=!1,$scope.lakareList=list,list&&list.length>0&&($scope.lakareList.unshift($scope.lakareListEmptyChoice),$cookieStore.get("savedFilterQuery")&&$cookieStore.get("savedFilterQuery").lakareSelector?$scope.filterQuery.lakareSelector=selectLakareByHsaId($cookieStore.get("savedFilterQuery").lakareSelector.hsaId):$scope.lakareSelector=$scope.lakareList[0])},function(){$scope.widgetState.loadingLakares=!1,$scope.lakareList=[],$scope.lakareList.push({hsaId:void 0,name:"<Kunde inte hämta lista>"})})}var PAGE_SIZE=10,enhetId="wc-all";$scope.widgetState={doneLoading:!0,runningQuery:!1,activeErrorMessageKey:null,filteredYet:!1,totalCount:0,currentList:[],filterFormCollapsed:!0},$scope.statusList=[{label:"Visa alla",value:"ALLA"},{label:"Visa alla ej hanterade",value:"ALLA_OHANTERADE"},{label:"Markera som hanterad",value:"MARKERA_SOM_HANTERAD"},{label:"Komplettera",value:"KOMPLETTERING_FRAN_VARDEN"},{label:"Svara",value:"SVAR_FRAN_VARDEN"},{label:"Invänta svar från Försäkringskassan",value:"SVAR_FRAN_FK"},{label:"Ingen",value:"HANTERAD"}],$scope.lakareListEmptyChoice={hsaId:void 0,name:"Alla"},$scope.lakareList=[],$scope.lakareList.push($scope.lakareListEmptyChoice),$scope.filterForm={questionFrom:"default",vidarebefordrad:"default",vantarPaSelector:$scope.statusList[1],lakareSelector:$scope.lakareList[0]};var defaultQuery={enhetId:void 0,startFrom:0,pageSize:PAGE_SIZE,questionFromFK:!1,questionFromWC:!1,hsaId:void 0,vidarebefordrad:void 0,changedFrom:void 0,changedTo:void 0,vantarPa:void 0,replyLatest:void 0};$scope.activeUnit={},$scope.filterQuery={};var unitStats={};$scope.resetFilterForm=function(){resetFilterForm(),$scope.widgetState.runningQuery=!0,getQA()},$scope.filterList=function(){$log.debug("filterList"),$scope.filterQuery.startFrom=0,$scope.widgetState.filteredYet=!0,$scope.widgetState.runningQuery=!0,getQA()},$scope.fetchMore=function(){$log.debug("fetchMore"),$scope.filterQuery.startFrom+=$scope.filterQuery.pageSize,$scope.widgetState.fetchingMoreInProgress=!0,getQA()},$scope.isActiveUnitChosen=function(){var name;for(name in $scope.activeUnit)return!0;return!1},$scope.onVidareBefordradChange=function(qa){qa.updateInProgress=!0,$log.debug("onVidareBefordradChange: fragaSvarId: "+qa.internReferens+" intysTyp: "+qa.intygsReferens.intygsTyp),fragaSvarCommonService.setVidareBefordradState(qa.internReferens,qa.intygsReferens.intygsTyp,qa.vidarebefordrad,function(result){qa.updateInProgress=!1,null!==result?qa.vidarebefordrad=result.vidarebefordrad:(qa.vidarebefordrad=!qa.vidarebefordrad,dialogService.showErrorMessageDialog("Kunde inte markera/avmarkera frågan som vidarebefordrad. Försök gärna igen för att se om felet är tillfälligt. Annars kan du kontakta supporten"))})},$scope.openIntyg=function(intygsReferens){$log.debug("open intyg "+intygsReferens.intygsId),$location.url("/fragasvar/"+intygsReferens.intygsTyp.toLowerCase()+"/"+intygsReferens.intygsId,!0)},$scope.openMailDialog=function(qa){$timeout(function(){fragaSvarCommonService.handleVidareBefodradToggle(qa,$scope.onVidareBefordradChange)},1e3),$window.location=fragaSvarCommonService.buildMailToLink(qa)},$scope.$on("wc-stat-update",function(event,message){unitStats=message}),$scope.$on("qa-filter-select-care-unit",function(event,unit){$log.debug("ActiveUnit is now:"+unit.id),$scope.activeUnit=unit,$cookieStore.get("enhetsId")&&$cookieStore.get("enhetsId")!==unit.id&&resetFilterForm(),$cookieStore.put("enhetsId",unit.id),enhetId=unit.id,$scope.widgetState.filterFormCollapsed=!0,initLakareList(unit.id),$scope.widgetState.runningQuery=!0,getQA()}),loadSearchForm()}]),angular.module("webcert").controller("webcert.UnsignedCertCtrl",["$cookieStore","$filter","$location","$log","$scope","$timeout","$window","common.dialogService","webcert.ManageCertificate","common.User",function($cookieStore,$filter,$location,$log,$scope,$timeout,$window,dialogService,ManageCertificate,User){"use strict";function resetFilterState(){$scope.filterForm=angular.copy(defaultFilterFormData),$scope.widgetState.filteredYet=!1}function loadFilterForm(){resetFilterState(),loadSavedByList($scope.widgetState.valdVardenhet);var storedFilter=$cookieStore.get("unsignedCertFilter");storedFilter&&storedFilter.filter.savedBy&&($scope.filterForm.lastFilterQuery.filter.savedBy=selectSavedByHsaId(storedFilter.filter.savedBy.hsaId))}function selectSavedByHsaId(hsaId){for(var count=0;count<$scope.widgetState.savedByList.length;count++)if($scope.widgetState.savedByList[count].hsaId===hsaId)return $scope.widgetState.savedByList[count];return $scope.widgetState.savedByList[0]}function loadSavedByList(){$scope.widgetState.loadingSavedByList=!0,ManageCertificate.getCertificateSavedByList(function(list){$scope.widgetState.loadingSavedByList=!1,$scope.widgetState.savedByList=list,list&&list.length>0&&$scope.widgetState.savedByList.unshift(defaultSavedByChoice)},function(){$scope.widgetState.loadingSavedByList=!1,$scope.widgetState.savedByList=[],$scope.widgetState.savedByList.push({hsaId:void 0,name:"<Kunde inte hämta lista>"})})}function convertFormFilterToPayload(query){var filterQuery=angular.copy(query),converted=filterQuery.filter;return converted.enhetsId=filterQuery.enhetsId,converted.startFrom=filterQuery.startFrom,converted.pageSize=filterQuery.pageSize,converted.forwarded="default"!==$scope.filterForm.forwarded?$scope.filterForm.forwarded:void 0,converted.complete="default"!==$scope.filterForm.complete?$scope.filterForm.complete:void 0,converted.savedFrom=$filter("date")(converted.savedFrom,"yyyy-MM-dd"),converted.savedTo=$filter("date")(converted.savedTo,"yyyy-MM-dd"),converted}var PAGE_SIZE=10;$scope.widgetState={valdVardenhet:User.getValdVardenhet(),doneLoading:!0,runningQuery:!1,fetchingMoreInProgress:!1,loadingSavedByList:!1,activeErrorMessageKey:null,queryFormCollapsed:!0,filteredYet:!1,savedByList:[],totalCount:0,currentList:void 0};var defaultSavedByChoice={name:"Visa alla",hsaId:void 0},defaultFilterQuery={enhetsId:User.getValdVardenhet().id,startFrom:0,pageSize:PAGE_SIZE,filter:{forwarded:void 0,complete:void 0,savedFrom:void 0,savedTo:void 0,savedBy:defaultSavedByChoice.hsaId}},defaultFilterFormData={forwarded:"default",complete:"default",lastFilterQuery:defaultFilterQuery};resetFilterState(),loadFilterForm(),$scope.widgetState.doneLoading=!1,ManageCertificate.getUnsignedCertificates(function(data){$scope.widgetState.doneLoading=!0,$scope.widgetState.activeErrorMessageKey=null,$scope.widgetState.currentList=data.results,$scope.widgetState.totalCount=data.totalCount},function(){$log.debug("Query Error"),$scope.widgetState.doneLoading=!0,$scope.widgetState.activeErrorMessageKey="info.query.error"}),$scope.filterDrafts=function(){$log.debug("filterDrafts"),$scope.widgetState.activeErrorMessageKey=null,$scope.widgetState.filteredYet=!0,$scope.filterForm.lastFilterQuery.startFrom=0;var filterQuery=$scope.filterForm.lastFilterQuery;$cookieStore.put("enhetsId",filterQuery.enhetsId),$cookieStore.put("unsignedCertFilter",$scope.filterForm.lastFilterQuery),filterQuery=convertFormFilterToPayload($scope.filterForm.lastFilterQuery),$scope.widgetState.runningQuery=!0,ManageCertificate.getUnsignedCertificatesByQueryFetchMore(filterQuery,function(successData){$scope.widgetState.runningQuery=!1,$scope.widgetState.currentList=successData.results,$scope.widgetState.totalCount=successData.totalCount},function(){$scope.widgetState.runningQuery=!1,$log.debug("Query Error"),$scope.widgetState.activeErrorMessageKey="info.query.error"})},$scope.resetFilter=function(){$cookieStore.remove("unsignedCertFilter"),resetFilterState(),$scope.filterDrafts()},$scope.fetchMore=function(){$log.debug("fetchMore"),$scope.widgetState.activeErrorMessageKey=null,$scope.filterForm.lastFilterQuery.startFrom+=PAGE_SIZE;var filterQuery=convertFormFilterToPayload($scope.filterForm.lastFilterQuery);$scope.widgetState.fetchingMoreInProgress=!0,ManageCertificate.getUnsignedCertificatesByQueryFetchMore(filterQuery,function(successData){$scope.widgetState.fetchingMoreInProgress=!1;for(var i=0;i<successData.results.length;i++)$scope.widgetState.currentList.push(successData.results[i])},function(){$scope.widgetState.fetchingMoreInProgress=!1,$log.debug("Query Error"),$scope.widgetState.activeErrorMessageKey="info.query.error"})},$scope.openIntyg=function(cert){$location.path("/"+cert.intygType+"/edit/"+cert.intygId)},$scope.openMailDialog=function(cert){$timeout(function(){ManageCertificate.handleForwardedToggle(cert,$scope.onForwardedChange)},1e3),$window.location=ManageCertificate.buildMailToLink(cert)},$scope.onForwardedChange=function(cert){cert.updateInProgress=!0,ManageCertificate.setForwardedState(cert.intygId,cert.intygType,cert.forwarded,function(result){cert.updateInProgress=!1,null!==result?cert.forwarded=result.forwarded:(cert.forwarded=!cert.forwarded,dialogService.showErrorMessageDialog("Kunde inte markera/avmarkera frågan som vidarebefordrad. Försök gärna igen för att se om felet är tillfälligt. Annars kan du kontakta supporten."))})}}]),angular.module("webcert").controller("webcert.ViewCertCtrl",["$rootScope","$routeParams","$scope","$window","common.dialogService","webcert.ManageCertificate",function($rootScope,$routeParams,$scope,$window,dialogService,ManageCertificate){"use strict";if($routeParams.qaOnly)var locationEvent=$rootScope.$on("$locationChangeStart",function(event,newUrl){event.preventDefault(),dialogService.showDialog($scope,{dialogId:"qa-only-warning-dialog",titleId:"label.qaonlywarning",bodyTextId:"label.qaonlywarning.body",templateUrl:"/views/partials/qa-only-warning-dialog.html",button1click:function(){locationEvent(),$window.location=newUrl},button1text:"common.continue",button1id:"button1continue-dialog",button2text:"common.cancel",autoClose:!0})});$scope.widgetState={certificateType:$routeParams.certificateType,fragaSvarAvailable:!1},ManageCertificate.getCertType($routeParams.certificateType,function(intygType){$scope.widgetState.fragaSvarAvailable=intygType.fragaSvarAvailable,$scope.widgetState.printStatus=intygType.printStatus})}]),angular.module("webcert").directive("wcAbout",["$location",function($location){"use strict";return{restrict:"A",transclude:!0,replace:!0,scope:{menuDefsAbout:"@"},templateUrl:"/js/directives/wcAbout.html",controller:["$scope",function($scope){function getSubMenuName(path){return path=path.substring(0,path.lastIndexOf("/")),path.substring(path.lastIndexOf("/")+1)}$scope.today=new Date,$scope.menuItems=[{id:"about-webcert",link:"/web/dashboard#/webcert/about",label:"Om Webcert"},{id:"about-support",link:"/web/dashboard#/support/about",label:"Support och kontaktinformation"},{id:"about-intyg",link:"/web/dashboard#/certificates/about",label:"Intyg som stöds i Webcert"},{id:"about-faq",link:"/web/dashboard#/faq/about",label:"Vanliga frågor"},{id:"about-cookies",link:"/web/dashboard#/cookies/about",label:"Om kakor (cookies)"}];var currentSubMenuName=getSubMenuName($location.path())||"index";$scope.currentSubMenuLabel="",angular.forEach($scope.menuItems,function(menu){var page=getSubMenuName(menu.link);page===currentSubMenuName&&($scope.currentSubMenuLabel=menu.label)}),$scope.isActive=function(page){return page=getSubMenuName(page),page===currentSubMenuName}}]}}]),angular.module("webcert").directive("wcCareUnitClinicSelector",["$cookieStore","$rootScope","common.User",function($cookieStore,$rootScope,User){"use strict";return{restrict:"A",transclude:!1,replace:!0,templateUrl:"/js/directives/wcCareUnitClinicSelector.html",controller:["$scope",function($scope){function selectFirstUnit(units){return"undefined"==typeof units||0===units.length?null:units[0]
}function selectUnitById(units,unitName){for(var count=0;count<units.length;count++)if(units[count].id===unitName)return units[count];return selectFirstUnit(units)}$scope.units=User.getVardenhetFilterList(User.getValdVardenhet()),$scope.units.unshift({id:"wc-all",namn:"Alla mottagningar på denna vårdenhet"}),$scope.selectedUnit=null,$scope.$on("wc-stat-update",function(event,message){var unitStats=message,valdVardgivare=User.getValdVardgivare(),valdVardenheterStats={};angular.forEach(unitStats.vardgivare,function(vardgivareStats){vardgivareStats.id===valdVardgivare.id&&(valdVardenheterStats=vardgivareStats.vardenheter)}),angular.forEach($scope.units,function(unit){"wc-all"===unit.id?(unit.fragaSvar=unitStats.fragaSvarValdEnhet,unit.tooltip="Totalt antal ej hanterade frågor och svar för den vårdenhet där du är inloggad. Här visas samtliga frågor och svar på vårdenhetsnivå och på mottagningsnivå."):angular.forEach(valdVardenheterStats,function(unitStat){unit.id===unitStat.id&&(unit.fragaSvar=unitStat.fragaSvar,unit.tooltip="Det totala antalet ej hanterade frågor och svar som finns registrerade på vårdenheten. Det kan finnas frågor och svar som gäller denna vårdenhet men som inte visas här. För säkerhets skull bör du även kontrollera frågor och svar för övriga vårdenheter och mottagningar.")})})}),$scope.selectUnit=function(unit){$scope.selectedUnit=unit,$rootScope.$broadcast("qa-filter-select-care-unit",$scope.selectedUnit)},2===$scope.units.length?$scope.selectUnit(selectFirstUnit($scope.units)):$scope.units.length>2&&$cookieStore.get("enhetsId")&&$scope.selectUnit(selectUnitById($scope.units,$cookieStore.get("enhetsId")))}]}}]),angular.module("webcert").directive("wcInsertCertificate",["$compile","$log",function($compile,$log){"use strict";return{restrict:"A",replace:!0,scope:{certificateType:"@"},link:function(scope,element){$.get("/web/webjars/"+scope.certificateType+"/webcert/views/intyg.html").then(function(file){element.html(file),element.replaceWith($compile(element.html())(scope))}).fail(function(error){$log.debug(error)})}}}]),angular.module("webcert").directive("wcInsertQa",["$compile","$log",function($compile,$log){"use strict";return{restrict:"A",replace:!0,scope:{certificateType:"@"},link:function(scope,element){$.get("/web/webjars/"+scope.certificateType+"/webcert/views/fragasvar.html").then(function(file){element.html(file),element.replaceWith($compile(element.html())(scope))}).fail(function(error){$log.debug(error)})}}}]),angular.module("webcert").directive("wcVisited",function(){"use strict";return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ctrl){ctrl.$visited=!1,element.bind("blur",function(){element.addClass("wc-visited"),scope.$apply(function(){ctrl.$visited=!0})})}}}),angular.module("webcert").filter("QAEnhetsIdFilter",function(){"use strict";return function(enheter,enhetsId){var result=[];return angular.forEach(enheter,function(enhet){enhet.vardperson.enhetsId===enhetsId&&result.push(enhet)}),result}}),angular.module("webcert").filter("TidigareIntygFilter",function(){"use strict";return function(certs,intygToInclude){var result=[];return"all"===intygToInclude?certs:(angular.forEach(certs,function(cert){("current"===intygToInclude&&"CANCELLED"!==cert.status||"revoked"===intygToInclude&&"CANCELLED"===cert.status)&&result.push(cert)}),result)}}),angular.module("webcert").factory("webcert.CreateCertificateDraft",["$http","$log","common.statService",function($http,$log,statService){"use strict";return{reset:function(){this.personnummer=null,this.intygType="default",this.fornamn=null,this.mellannamn=null,this.efternamn=null,this.postadress=null,this.postnummer=null,this.postort=null},getNameAndAddress:function(personnummer,onSuccess,onNotFound,onError){$log.debug("CreateCertificateDraft getNameAndAddress");var that=this;that.personnummer=personnummer;var restPath="/api/person/"+personnummer;$http.get(restPath).success(function(data){$log.debug(data),"FOUND"===data.status&&data.person?(that.fornamn=data.person.fornamn,that.mellannamn=data.person.mellannamn,that.efternamn=data.person.efternamn,that.postadress=data.person.postadress,that.postnummer=data.person.postnummer,that.postort=data.person.postort,onSuccess()):($log.debug("Personen hittades inte i PU-tjänsten, manuell inmatning krävs"),onNotFound())}).error(function(){$log.warn("PU-tjänsten kunde inte kontaktas, manuell inmatning krävs"),onError()})},createDraft:function(onSuccess,onError){$log.debug("_createDraft");var payload={};payload.intygType=this.intygType,payload.patientPersonnummer=this.personnummer,payload.patientFornamn=this.fornamn,payload.patientMellannamn=this.mellannamn,payload.patientEfternamn=this.efternamn,payload.patientPostadress=this.postadress,payload.patientPostnummer=this.postnummer,payload.patientPostort=this.postort;var restPath="/api/utkast/"+this.intygType;$http.post(restPath,payload).success(function(data){$log.debug("got callback data: "+data),onSuccess(data),statService.refreshStat()}).error(function(data,status){$log.error("error "+status),onError(data)})},copyIntygToDraft:function(cert,onSuccess,onError){var id="undefined"==typeof cert.intygId?cert.id:cert.intygId;$log.debug("_copyIntygToDraft "+cert.intygType+", "+id);var restPath="/api/intyg/"+cert.intygType+"/"+id+"/kopiera/";$http.post(restPath,{}).success(function(data){$log.debug("got callback data: "+data),onSuccess(data),statService.refreshStat()}).error(function(data,status){$log.error("error "+status),onError(data)})}}}]),angular.module("webcert").factory("webcert.ManageCertificate",["$http","$log","$location","$window","$modal","$cookieStore","webcert.CreateCertificateDraft","common.User","common.dialogService","common.featureService","common.messageService","common.CertificateService",function($http,$log,$location,$window,$modal,$cookieStore,CreateCertificateDraft,User,dialogService,featureService,messageService,CertificateService){"use strict";function _getCertTypes(onSuccess,onError){var restPath="/api/modules/map";$http.get(restPath).success(function(data){$log.debug("got data:",data);for(var sortValue=0,types=[{sortValue:sortValue++,id:"default",label:messageService.getProperty("label.default-cert-type")}],i=0;i<data.length;i++){var m=data[i];featureService.isFeatureActive(featureService.features.HANTERA_INTYGSUTKAST,m.id)&&types.push({sortValue:sortValue++,id:m.id,label:m.label,fragaSvarAvailable:m.fragaSvarAvailable})}onSuccess(types)}).error(function(data,status){$log.error("error "+status),onError&&onError()})}function _getCertType(intygType,onSuccess){_getCertTypes(function(types){for(var intygTypeMeta={},i=0;i<types.length;i++)if(types[i].id===intygType){intygTypeMeta=types[i];break}onSuccess(intygTypeMeta)})}function _getCertificatesForPerson(requestConfig,onSuccess,onError){$log.debug("_getCertificatesForPerson type:"+requestConfig);var restPath="/api/intyg/person/"+requestConfig;$http.get(restPath).success(function(data){$log.debug("got data:"+data),onSuccess(data)}).error(function(data,status){$log.error("error "+status),onError(status)})}function _getUnsignedCertificates(onSuccess,onError){$log.debug("_getUnsignedCertificates:");var restPath="/api/utkast/";$http.get(restPath).success(function(data){$log.debug("got data:"+data),onSuccess(data)}).error(function(data,status){$log.error("error "+status),onError(null)})}function _getUnsignedCertificatesByQueryFetchMore(query,onSuccess,onError){$log.debug("_getUnsignedCertificatesByQueryFetchMore");var restPath="/api/utkast";$http.get(restPath,{params:query}).success(function(data){$log.debug("_getUnsignedCertificatesByQueryFetchMore got data:"+data),onSuccess(data)}).error(function(data,status){$log.error("_getUnsignedCertificatesByQueryFetchMore error "+status),onError(data)})}function _getCertificateSavedByList(onSuccess,onError){$log.debug("_getCertificateSavedByList");var restPath="/api/utkast/lakare/";$http.get(restPath).success(function(data){$log.debug("_getCertificateSavedByList got data:"+data),onSuccess(data)}).error(function(data,status){$log.error("_getCertificateSavedByList error "+status),onError(data)})}function _setForwardedState(id,intygType,isForwarded,callback){$log.debug("_setForwardedState");var restPath="/api/intyg/"+intygType+"/"+id+"/vidarebefordra";$http.put(restPath,isForwarded.toString()).success(function(data){$log.debug("_setForwardedState data:"+data),callback(data)}).error(function(data,status){$log.error("error "+status),callback(null)})}function _buildMailToLink(cert){var baseURL=$window.location.protocol+"//"+$window.location.hostname+($window.location.port?":"+$window.location.port:""),url=baseURL+"/web/dashboard#/"+cert.intygType+"/edit/"+cert.intygId,recipient="",subject="Du har blivit tilldelad ett ej signerat intyg i Webcert",body="Klicka länken för att gå till intyget:\n"+url,link="mailto:"+recipient+"?subject="+encodeURIComponent(subject)+"&body="+encodeURIComponent(body);return $log.debug(link),link}function _setSkipForwardedCookie(){var secsDays=31104e6,now=new Date,expires=new Date(now.getTime()+secsDays);document.cookie="WCDontAskForForwardedToggle=1; expires="+expires.toUTCString()}function _isSkipForwardedCookieSet(){return document.cookie&&-1!==document.cookie.indexOf("WCDontAskForForwardedToggle=1")}function _handleForwardedToggle(draft,onYesCallback){draft.forwarded||_isSkipForwardedCookieSet()||_showForwardedPreferenceDialog("markforward","Det verkar som att du har informerat den som ska signera utkastet. Vill du markera utkastet som vidarebefordrad?",function(){$log.debug("yes"),draft.forwarded=!0,onYesCallback&&onYesCallback(draft)},function(){$log.debug("no")},function(){$log.debug("no and dont ask"),_setSkipForwardedCookie()})}function _showForwardedPreferenceDialog(title,bodyText,yesCallback,noCallback,noDontAskCallback,callback){var DialogInstanceCtrl=["$scope","$modalInstance","title","bodyText","yesCallback","noCallback","noDontAskCallback",function($scope,$modalInstance,title,bodyText,yesCallback,noCallback,noDontAskCallback){$scope.title=title,$scope.bodyText=bodyText,$scope.noDontAskVisible=void 0!==noDontAskCallback,$scope.yes=function(result){yesCallback(),$modalInstance.close(result)},$scope.no=function(){noCallback(),$modalInstance.close("cancel")},$scope.noDontAsk=function(){noDontAskCallback(),$modalInstance.close("cancel_dont_ask_again")}}],msgbox=$modal.open({templateUrl:"/views/partials/preference-dialog.html",controller:DialogInstanceCtrl,resolve:{title:function(){return angular.copy(title)},bodyText:function(){return angular.copy(bodyText)},yesCallback:function(){return yesCallback},noCallback:function(){return noCallback},noDontAskCallback:function(){return noDontAskCallback}}});msgbox.result.then(function(result){callback&&callback(result)},function(){})}function _initCopyDialog($scope){copyDialog.isOpen=!1,$scope&&($scope.dialog={errormessageid:"error.failedtocopyintyg"})}function _createCopyDraft($scope,dialogModel,cert,onSuccess,onError){var valdVardenhet=User.getValdVardenhet();CreateCertificateDraft.vardGivareHsaId=valdVardenhet.id,CreateCertificateDraft.vardGivareNamn=valdVardenhet.namn,CreateCertificateDraft.vardEnhetHsaId=valdVardenhet.id,CreateCertificateDraft.vardEnhetNamn=valdVardenhet.namn,CreateCertificateDraft.intygType=cert.intygType,CreateCertificateDraft.copyIntygToDraft(cert,function(data){$log.debug("Successfully requested copy draft"),onSuccess&&onSuccess(data)},function(error){$log.debug("Create copy failed: "+error.message),onError&&onError()})}function _copy($scope,cert){function goToDraft(type,intygId){$location.url("/"+type+"/edit/"+intygId,!0)}var dialogModel={dontShowCopyInfo:!1};return void 0===$cookieStore.get(COPY_DIALOG_COOKIE)&&$cookieStore.put(COPY_DIALOG_COOKIE,dialogModel.dontShowCopyInfo),$cookieStore.get(COPY_DIALOG_COOKIE)?($log.debug("copy cert without dialog"+cert),$scope.widgetState.activeErrorMessageKey=null,_createCopyDraft($scope,dialogModel,cert,function(draftResponse){goToDraft(draftResponse.intygsTyp,draftResponse.intygsUtkastId)},function(){$scope.widgetState.activeErrorMessageKey="error.failedtocopyintyg"})):(copyDialog=dialogService.showDialog($scope,{dialogId:"copy-dialog",titleId:"label.copycert",templateUrl:"/views/partials/check-dialog.html",model:dialogModel,bodyText:"<p>Kopiera intyg innebär att en kopia skapas av det befintliga intyget och med samma information. I de fall patienten har ändrat namn eller adress så uppdateras den informationen.</p><p>Uppgifterna i intygsutkastet går att ändra innan det signeras.</p>Kopiera intyg kan användas exempelvis vid förlängning av en sjukskrivning.",button1click:function(){$log.debug("copy cert from dialog"+cert),dialogModel.dontShowCopyInfo&&$cookieStore.put(COPY_DIALOG_COOKIE,dialogModel.dontShowCopyInfo),$scope.dialog.showerror=!1,$scope.dialog.acceptprogressdone=!1,_createCopyDraft($scope,dialogModel,cert,function(draftResponse){$scope.dialog.acceptprogressdone=!0,$scope.widgetState.createErrorMessageKey=void 0,copyDialog.close(),goToDraft(draftResponse.intygsTyp,draftResponse.intygsUtkastId)},function(){$scope.dialog.acceptprogressdone=!0,$scope.dialog.showerror=!0})},button1text:"common.copy",button2text:"common.cancel",autoClose:!1}),copyDialog.opened.then(function(){copyDialog.isOpen=!0},function(){copyDialog.isOpen=!1})),copyDialog}function _initSend($scope){$scope.dialogSend={acceptprogressdone:!0,focus:!1,errormessageid:"error.failedtosendintyg",showerror:!1,patientConsent:!1}}function _sendSigneratIntyg(intygsId,intygsTyp,recipientId,patientConsent,dialogModel,sendDialog,onSuccess){dialogModel.showerror=!1,dialogModel.acceptprogressdone=!1,CertificateService.sendSigneratIntyg(intygsId,intygsTyp,recipientId,patientConsent,function(){dialogModel.acceptprogressdone=!0,sendDialog.close(),onSuccess()},function(error){$log.debug("Send cert failed: "+error),dialogModel.acceptprogressdone=!0,dialogModel.showerror=!0})}function _send($scope,cert,recipientId,titleId,onSuccess){return sendDialog=dialogService.showDialog($scope,{dialogId:"send-dialog",titleId:titleId,templateUrl:"/views/partials/send-dialog.html",model:$scope.dialogSend,button1click:function(){$log.debug("send cert from dialog"+cert),_sendSigneratIntyg(cert.id,cert.intygType,recipientId,$scope.dialogSend.patientConsent,$scope.dialogSend,sendDialog,onSuccess)},button1text:"common.send",button1id:"button1send-dialog",button2text:"common.cancel",autoClose:!1}),sendDialog.opened.then(function(){sendDialog.isOpen=!0},function(){sendDialog.isOpen=!1}),sendDialog}function _initMakulera($scope){$scope.dialogMakulera={acceptprogressdone:!0,focus:!1,errormessageid:"error.failedtomakuleraintyg",showerror:!1}}function _revokeSigneratIntyg(cert,dialogModel,makuleraDialog,onSuccess){dialogModel.showerror=!1,dialogModel.acceptprogressdone=!1,CertificateService.revokeSigneratIntyg(cert.id,cert.intygType,function(){dialogModel.acceptprogressdone=!0,makuleraDialog.close(),onSuccess()},function(error){$log.debug("Revoke failed: "+error),dialogModel.acceptprogressdone=!0,dialogModel.showerror=!0})}function _makulera($scope,cert,confirmationMessage,onSuccess){var successCallback=function(){dialogService.showMessageDialog("label.makulera.confirmation",confirmationMessage,function(){onSuccess()})};return makuleraDialog=dialogService.showDialog($scope,{dialogId:"makulera-dialog",titleId:"label.makulera",templateUrl:"/views/partials/makulera-dialog.html",model:$scope.dialogMakulera,button1click:function(){$log.debug("revoking cert from dialog"+cert),_revokeSigneratIntyg(cert,$scope.dialogMakulera,makuleraDialog,successCallback)},button1text:"common.revoke",button1id:"button1makulera-dialog",button2text:"common.cancel",bodyTextId:"label.makulera.body",autoClose:!1})}var COPY_DIALOG_COOKIE="wc.dontShowCopyDialog",copyDialog={isOpen:!1},sendDialog={isOpen:!1},makuleraDialog={isOpen:!1};return{getCertTypes:_getCertTypes,getCertType:_getCertType,getCertificatesForPerson:_getCertificatesForPerson,getUnsignedCertificates:_getUnsignedCertificates,getUnsignedCertificatesByQueryFetchMore:_getUnsignedCertificatesByQueryFetchMore,getCertificateSavedByList:_getCertificateSavedByList,initMakulera:_initMakulera,makulera:_makulera,setForwardedState:_setForwardedState,handleForwardedToggle:_handleForwardedToggle,buildMailToLink:_buildMailToLink,initSend:_initSend,send:_send,initCopyDialog:_initCopyDialog,copy:_copy}}]),angular.module("webcert").factory("webcert.QuestionAnswer",["$http","$log",function($http,$log){"use strict";function _getQA(query,onSuccess,onError){$log.debug("_getQA");var restPath="/api/fragasvar/sok";$http.get(restPath,{params:query}).success(function(data){$log.debug("got data:"+data),onSuccess(data)}).error(function(data,status){$log.error("error "+status),onError(data)})}function _getQALakareList(enhetsId,onSuccess,onError){$log.debug("_getQALakareList: "+enhetsId);var restPath="/api/fragasvar/lakare";$http.get(restPath,{params:{enhetsId:enhetsId}}).success(function(data){$log.debug("_getQALakareList got data:"+data),onSuccess(data)}).error(function(data,status){$log.error("_getQALakareList error "+status),onError(data)})}return{getQA:_getQA,getQALakareList:_getQALakareList}}]);