#
# Copyright (C) 2016 Inera AB (http://www.inera.se)
#
# This file is part of sklintyg (https://github.com/sklintyg).
#
# sklintyg is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# sklintyg is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

########################################
#
# DB configuration
#
########################################
db.driver=com.mysql.jdbc.Driver
db.url=jdbc:mysql://${database.server}:${database.port}/${database.name}?useSSL=false
db.username=${database.username}
db.password=${database.password}
db.pool.maxSize=20

# Hibernate Configuration
hibernate.dialect=org.hibernate.dialect.MySQLDialect
hibernate.hbm2ddl.auto=none
hibernate.ejb.naming_strategy=org.hibernate.cfg.DefaultNamingStrategy
hibernate.show_sql=false
hibernate.format_sql=false
hibernate.id.new_generator_mappings=false

########################################
#
# Mail configuration
#
########################################
mail.webcert.host.url=${webcert.host.url}
mail.admin=admin@webcert.se
mail.from=no-reply@${webcert.host.url}
mail.protocol=smtps
mail.defaultEncoding=UTF-8
mail.smtps.auth=true
mail.smtps.starttls.enable=true
mail.smtps.debug=false

########################################
#
# PDL Logging Configuration
#
########################################
pdlLogging.systemId=webcert
pdlLogging.systemName=WebCert

########################################
#
# Integration URLs Configuration
#
########################################
certificate.view.url.base=/
certificate.view.url.fragment.template=/fragasvar/{certType}/{certId}

certificate.view.url.intyg.integration.template=/intyg/{certType}/{certId}/
certificate.view.url.intyg-read-only.integration.template=/intyg-read-only/{certType}/{certId}
certificate.view.url.utkast.integration.template=/{certType}/edit/{certId}/

########################################
#
# Stale signature cleanup
#
########################################
# every 15 minutes 0 0/15 * 1/1 * ? *
signature.cleanup.cron=0 0/1 * * * *

################################################
#
# Intygstj\u00E4nst configuration
#
################################################
intygstjanst.getmedicalcertificate.endpoint.url = ${intygstjanst.base.url}/get-medical-certificate/v1.0
intygstjanst.gettsdiabetes.endpoint.url = ${intygstjanst.base.url}/get-ts-diabetes/v1.0
intygstjanst.registertsdiabetes.endpoint.url = ${intygstjanst.base.url}/register-ts-diabetes/v1.0
intygstjanst.getcertificate.endpoint.url = ${intygstjanst.base.url}/get-certificate-se/v2.0
intygstjanst.getcertificatetype.endpoint.url = ${intygstjanst.base.url}/get-certificate-type/v1.0
intygstjanst.registercertificate.v3.endpoint.url = ${intygstjanst.base.url}/register-certificate-se/v3.0
intygstjanst.listcertificatesforcare.v3.endpoint.url = ${intygstjanst.base.url}/list-certificates-for-care/v3.0
intygstjanst.registermedicalcertificate.endpoint.url = ${intygstjanst.base.url}/register-certificate/v3.0
intygstjanst.sendcertificate.endpoint.url = ${intygstjanst.base.url}/send-certificate-to-recipient/v2.0
intygstjanst.revokecertificate.endpoint.url = ${intygstjanst.base.url}/revoke-certificate/v1.0
intygstjanst.revokecertificaterivta.endpoint.url = ${intygstjanst.base.url}/revoke-certificate-rivta/v2.0
intygstjanst.sendmessagetorecipient.endpoint.url = ${intygstjanst.base.url}/send-message-to-recipient/v2.0
intygstjanst.pingforconfiguration.endpoint.url = ${intygstjanst.base.url}/ping-for-configuration/v1.0
intygstjanst.listrelationsforcertificate.endpoint.url = ${intygstjanst.base.url}/list-relations-for-certificate/v1.0
intygstjanst.listapprovedreceivers.endpoint.url=${intygstjanst.base.url}/list-approved-receivers/v1.0
intygstjanst.listpossiblereceivers.endpoint.url = ${intygstjanst.base.url}/list-possible-receivers/v1.0
intygstjanst.registerapprovedreceivers.endpoint.url = ${intygstjanst.base.url}/register-approved-receivers/v1.0

################################################
#
# HSA-Integration Configurations
#
################################################
infrastructure.directory.authorizationmanagement.getcredentialsforpersonincludingprotectedpersonresponderinterface.endpoint.url=${ntjp.base.url}/infrastructure/directory/authorizationmanagement/GetCredentialsForPersonIncludingProtectedPerson/1/rivtabp21
infrastructure.directory.organization.getunit.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetUnit/1/rivtabp21
infrastructure.directory.organization.gethealthcareunit.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetHealthCareUnit/1/rivtabp21
infrastructure.directory.organization.gethealthcareunitmembers.endpoint.url=${ntjp.base.url}/infrastructure/directory/organization/GetHealthCareUnitMembers/1/rivtabp21
infrastructure.directory.employee.getemployee.endpoint.url=${ntjp.base.url}/infrastructure/directory/employee/GetEmployeeIncludingProtectedPerson/1/rivtabp21

################################################
#
# NTjP WebService Configuration
#
################################################
ntjp.ws.certificate.file=${config.dir}/certifikat/certificate.jks
ntjp.ws.certificate.type=JKS
ntjp.ws.truststore.file=${config.dir}/certifikat/truststore.jks
ntjp.ws.truststore.type=JKS

################################################
#
# F\u00F6rs\u00E4kringskassan Configuration
#
################################################
sendquestiontofk.endpoint.url=${ntjp.base.url}/SendMedicalCertificateQuestion/1/rivtabp20
sendanswertofk.endpoint.url=${ntjp.base.url}/SendMedicalCertificateAnswer/1/rivtabp20

################################################
#
# Properties for Personuppgiftstj\u00E4nsten, address lookup service
#
################################################
putjanst.endpoint.url = ${ntjp.base.url}/strategicresourcemanagement/persons/person/GetPersonsForProfile/3/rivtabp21

################################################
#
# Diagnos Code Repository Configuration
#
################################################
icd10se.diagnos.code.files=file:///${webcert.resources.folder}/diagnoskoder/KSH97_KAT.ANS,file:///${webcert.resources.folder}/diagnoskoder/KSH97_KOD.ANS,file:///${webcert.resources.folder}/diagnoskoder/KSH97_KXX.ANS
ksh97p.diagnos.code.files=file:///${webcert.resources.folder}/diagnoskoder/KSH97P_SFAMALT.ANS
diagnos.code.encoding=ISO-8859-1

################################################
#
# Notification Sender Configuration
#
################################################
certificatestatusupdateforcare.ws.endpoint.v3.url=${ntjp.base.url}/clinicalprocess/healthcond/certificate/CertificateStatusUpdateForCare/3/rivtabp21
notificationSender.maximumRedeliveries=30

############################################
# Privatlakarportal
############################################
privatepractitioner.getprivatepractitioner.endpoint.url=${privatepractitioner.base.url}/get-private-practitioner/v1.0
privatepractitioner.validateprivatepractitioner.endpoint.url=${privatepractitioner.base.url}/validate-private-practitioner/v1.0
privatepractitioner.pingforconfiguration.endpoint.url=${privatepractitioner.base.url}/ping-for-configuration
privatepractitioner.defaultterms.file=file:///${webcert.resources.folder}/privatlakaravtal/terms_text.html

################################################
#
# FMB Configuration
#
################################################
fmb.dataupdate.cron = 0 0 2 * * *

################################################
#
# S\u00E4kerhetstj\u00E4nst configuration
#
################################################
sakerhetstjanst.saml.entityId=${webcert.host.url}
sakerhetstjanst.saml.entityBaseUrl=${webcert.host.url}
sakerhetstjanst.saml.keystore.file=file://${config.dir}/certifikat/login.certificate.jks
sakerhetstjanst.saml.truststore.file=file://${config.dir}/certifikat/truststore.jks
# setting skew time to 5 minutes because autentiseringstjanst issues SAML tokens with issue date +1 minute in the future
sakerhetstjanst.saml.responseSkew = 300

cgi.grp.ws.certificate.file=${config.dir}/certifikat/login.certificate.jks
cgi.grp.ws.certificate.type=JKS
cgi.grp.ws.truststore.file=${config.dir}/certifikat/login.truststore.jks
cgi.grp.ws.truststore.type=JKS

#################################################
#
# Security configuration
#
#################################################
authorities.configuration.file=file:///${webcert.resources.folder}/security/authorities.yaml
features.configuration.file=file:///${webcert.resources.folder}/security/features.yaml

#################################################
#
# Dynamic texts
#
#################################################
texts.file.directory=${webcert.resources.folder}/texts/
texts.update.cron= 0 0 0 * * *

################################################
#
# HSA/PU Cache (redis) configuration
#
################################################
redis.host=127.0.0.1
redis.port=6379
redis.password=
redis.cache.default_entry_expiry_time_in_seconds=86400
pu.cache.expiry=86400
hsa.unit.cache.expiry=86400
hsa.healthcareunit.cache.expiry=86400
hsa.healhcareunitmembers.cache.expiry=86400

# Dynamic loading of identities into HSA stub
hsa.stub.additional.identities.folder=${java.io.tmpdir}

# Dynamic links file
dynamic.links.file=${webcert.resources.folder}/links/webcert.links.json

# Postnummer file
postnummer.file=file:///${webcert.resources.folder}/postnummer/postnummer.csv
postnummer.encoding=ISO-8859-1

# Sekretessmarkering produktionssattningsdatum (ISO-8601)
sekretessmarkering.prod.date=2016-11-30T23:00:00

# Temporary hack for mitigating fullstandigtNamn issues in ANP when sending answers.
fk7263.send.medical.certificate.answer.force.fullstandigtnamn=true

# TAK configuration
tak.platform = NTJP
tak.update.cron = 0 0 0 * * *
# The overall timeout for the entire operation in seconds
tak.timeout = 3
# Timeouts for the RestTemplate doing the actual requests in millies
tak.connection.request.timeout = 1000
tak.connection.timeout = 1000
tak.read.timeout = 1000

# SRS configuration
srs.getsrsinformation.endpoint.url = ${srs.base.url}/getsrs
srs.questions.endpoint.url = ${srs.base.url}/predictionquestions
srs.getconsent.endpoint.url = ${srs.base.url}/get-consent
srs.setconsent.endpoint.url = ${srs.base.url}/set-consent
srs.getdiagnosiscodes.endpoint.url = ${srs.base.url}/diagnosiscodes
srs.getsrsfordiagnosis.endpoint.url = ${srs.base.url}/getsrsfordiagnosis

# Automatic logout timeout
logout.timeout.seconds=15

# Utkast lock
job.utkastlock.cron=10 3 * * * ?
job.utkastlock.locked.after.day=14

# ActiveMQ settings for subscribing to internal notification queue
#activemq.broker.url=tcp://localhost:61616?jms.nonBlockingRedelivery=true&jms.redeliveryPolicy.maximumRedeliveries=3&jms.redeliveryPolicy.maximumRedeliveryDelay=6000&jms.redeliveryPolicy.initialRedeliveryDelay=4000&jms.redeliveryPolicy.useExponentialBackOff=true&jms.redeliveryPolicy.backOffMultiplier=2
activemq.broker.url=vm://localhost?broker.persistent=false?broker.persistent=false&jms.nonBlockingRedelivery=true\&jms.redeliveryPolicy.maximumRedeliveries=5&jms.redeliveryPolicy.maximumRedeliveryDelay=20000&jms.redeliveryPolicy.initialRedeliveryDelay=15000&jms.redeliveryPolicy.useExponentialBackOff=true&jms.redeliveryPolicy.backOffMultiplier=2
activemq.broker.username=
activemq.broker.password=
certificate.sender.queueMame=dev.webcert.certificate.queue

# Required by tsbas module api when bootstrapping. Should not have any effect in Mina Intyg
tsbas.send.certificate.to.recipient.registercertificate.version=v1
notification.ws.queueName=dev.webcert.notification.ws.queue
notification.aggregation.queueName=dev.webcert.aggregated.notification.queue
log.queueName=dev.logging.queue