<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://cxf.apache.org/configuration/security"
  xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:http="http://cxf.apache.org/transports/http/configuration"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
        http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd">

  <!-- Clients using NTJP -->
  <beans>
    <jaxws:client id="sendQuestionToFKClient"
      serviceClass="se.inera.ifv.insuranceprocess.healthreporting.sendmedicalcertificatequestion.v1.rivtabp20.SendMedicalCertificateQuestionResponderInterface"
      address="${sendquestiontofk.endpoint.url}">
    </jaxws:client>

    <jaxws:client id="sendAnswerToFKClient"
      serviceClass="se.inera.ifv.insuranceprocess.healthreporting.sendmedicalcertificateanswer.v1.rivtabp20.SendMedicalCertificateAnswerResponderInterface"
      address="${sendanswertofk.endpoint.url}">
    </jaxws:client>
  </beans>

  <beans profile="qa,prod">
    <http:conduit
      name="{urn:riv:insuranceprocess:healthreporting:SendMedicalCertificateQuestion:1:rivtabp20}SendMedicalCertificateQuestionResponderInterfacePort.http-conduit">
      <http:client AllowChunking="false" AutoRedirect="true"
        Connection="Keep-Alive" />
      <http:tlsClientParameters disableCNCheck="true">
        <sec:keyManagers keyPassword="${ntjp.ws.key.manager.password}">
          <sec:keyStore file="${ntjp.ws.certificate.file}"
            password="${ntjp.ws.certificate.password}" type="${ntjp.ws.certificate.type}" />
        </sec:keyManagers>
        <sec:trustManagers>
          <sec:keyStore file="${ntjp.ws.truststore.file}"
            password="${ntjp.ws.truststore.password}" type="${ntjp.ws.truststore.type}" />
        </sec:trustManagers>

        <sec:cipherSuitesFilter>
          <!-- these filters ensure that a cipher suite with export-suitable 
            or null encryption is used, but exclude anonymous Diffie-Hellman key change 
            as this is vulnerable to man-in-the-middle attacks -->
          <sec:include>.*_EXPORT_.*</sec:include>
          <sec:include>.*_EXPORT1024_.*</sec:include>
          <sec:include>.*_WITH_DES_.*</sec:include>
          <sec:include>.*_WITH_AES_.*</sec:include>
          <sec:include>.*_WITH_NULL_.*</sec:include>
          <sec:exclude>.*_DH_anon_.*</sec:exclude>
        </sec:cipherSuitesFilter>
      </http:tlsClientParameters>
    </http:conduit>
    <http:conduit
      name="{urn:riv:insuranceprocess:healthreporting:SendMedicalCertificateAnswer:1:rivtabp20}SendMedicalCertificateAnswerResponderInterfacePort.http-conduit">
      <http:client AllowChunking="false" AutoRedirect="true"
        Connection="Keep-Alive" />
      <http:tlsClientParameters disableCNCheck="true">
        <sec:keyManagers keyPassword="${ntjp.ws.key.manager.password}">
          <sec:keyStore file="${ntjp.ws.certificate.file}"
            password="${ntjp.ws.certificate.password}" type="${ntjp.ws.certificate.type}" />
        </sec:keyManagers>
        <sec:trustManagers>
          <sec:keyStore file="${ntjp.ws.truststore.file}"
            password="${ntjp.ws.truststore.password}" type="${ntjp.ws.truststore.type}" />
        </sec:trustManagers>

        <sec:cipherSuitesFilter>
          <!-- these filters ensure that a cipher suite with export-suitable 
            or null encryption is used, but exclude anonymous Diffie-Hellman key change 
            as this is vulnerable to man-in-the-middle attacks -->
          <sec:include>.*_EXPORT_.*</sec:include>
          <sec:include>.*_EXPORT1024_.*</sec:include>
          <sec:include>.*_WITH_DES_.*</sec:include>
          <sec:include>.*_WITH_AES_.*</sec:include>
          <sec:include>.*_WITH_NULL_.*</sec:include>
          <sec:exclude>.*_DH_anon_.*</sec:exclude>
        </sec:cipherSuitesFilter>
      </http:tlsClientParameters>
    </http:conduit>
  </beans>

  <!-- Clients using INTYGSTJÃ„NST -->
  <beans>
    <jaxws:client id="listCertificatesForCareResponder"
      serviceClass="se.inera.certificate.clinicalprocess.healthcond.certificate.listcertificatesforcare.v1.ListCertificatesForCareResponderInterface"
      address="${intygstjanst.listcertificatesforcare.endpoint.url}">
    </jaxws:client>

    <jaxws:client id="sendCertificateClient"
      serviceClass="se.inera.ifv.insuranceprocess.healthreporting.sendmedicalcertificate.v1.rivtabp20.SendMedicalCertificateResponderInterface"
      address="${intygstjanst.sendcertificate.endpoint.url}" />

    <jaxws:client id="revokeCertificateClient"
      serviceClass="se.inera.ifv.insuranceprocess.healthreporting.revokemedicalcertificate.v1.rivtabp20.RevokeMedicalCertificateResponderInterface"
      address="${intygstjanst.revokecertificate.endpoint.url}" />

    <jaxws:client id="getRecipientsForCertificateResponder"
      serviceClass="se.inera.certificate.clinicalprocess.healthcond.certificate.getrecipientsforcertificate.v1.GetRecipientsForCertificateResponderInterface"
      address="${intygstjanst.getrecipientsforcertificate.endpoint.url}" />

    <jaxws:client id="pingIntygstjanstForConfigurationClient"
      serviceClass="se.riv.itintegration.monitoring.rivtabp21.v1.PingForConfigurationResponderInterface"
      address="${intygstjanst.pingforconfiguration.endpoint.url}" />
  </beans>

  <beans profile="test,qa,prod">
    <http:conduit
      name="{urn:riv:clinicalprocess:healthcond:certificate:GetCertificateForCare:1:rivtabp21}GetCertificateForCareResponderInterfacePort.http-conduit">
      <http:client AllowChunking="false" AutoRedirect="true"
        Connection="Keep-Alive" />
      <http:tlsClientParameters disableCNCheck="true">

        <sec:keyManagers keyPassword="${ntjp.ws.key.manager.password}">
          <sec:keyStore file="${ntjp.ws.certificate.file}"
            password="${ntjp.ws.certificate.password}" type="${ntjp.ws.certificate.type}" />
        </sec:keyManagers>
        <sec:trustManagers>
          <sec:keyStore file="${ntjp.ws.truststore.file}"
            password="${ntjp.ws.truststore.password}" type="${ntjp.ws.truststore.type}" />
        </sec:trustManagers>

        <sec:cipherSuitesFilter>
          <!-- these filters ensure that a cipher suite with export-suitable 
            or null encryption is used, but exclude anonymous Diffie-Hellman key change 
            as this is vulnerable to man-in-the-middle attacks -->
          <sec:include>.*_EXPORT_.*</sec:include>
          <sec:include>.*_EXPORT1024_.*</sec:include>
          <sec:include>.*_WITH_DES_.*</sec:include>
          <sec:include>.*_WITH_AES_.*</sec:include>
          <sec:include>.*_WITH_NULL_.*</sec:include>
          <sec:exclude>.*_DH_anon_.*</sec:exclude>
        </sec:cipherSuitesFilter>
      </http:tlsClientParameters>
    </http:conduit>
    <http:conduit
      name="{urn:riv:clinicalprocess:healthcond:certificate:ListCertificatesForCare:1:rivtabp21}ListCertificatesForCareResponderInterfacePort.http-conduit">
      <http:client AllowChunking="false" AutoRedirect="true"
        Connection="Keep-Alive" />
      <http:tlsClientParameters disableCNCheck="true">

        <sec:keyManagers keyPassword="${ntjp.ws.key.manager.password}">
          <sec:keyStore file="${ntjp.ws.certificate.file}"
            password="${ntjp.ws.certificate.password}" type="${ntjp.ws.certificate.type}" />
        </sec:keyManagers>
        <sec:trustManagers>
          <sec:keyStore file="${ntjp.ws.truststore.file}"
            password="${ntjp.ws.truststore.password}" type="${ntjp.ws.truststore.type}" />
        </sec:trustManagers>

        <sec:cipherSuitesFilter>
          <!-- these filters ensure that a cipher suite with export-suitable 
            or null encryption is used, but exclude anonymous Diffie-Hellman key change 
            as this is vulnerable to man-in-the-middle attacks -->
          <sec:include>.*_EXPORT_.*</sec:include>
          <sec:include>.*_EXPORT1024_.*</sec:include>
          <sec:include>.*_WITH_DES_.*</sec:include>
          <sec:include>.*_WITH_AES_.*</sec:include>
          <sec:include>.*_WITH_NULL_.*</sec:include>
          <sec:exclude>.*_DH_anon_.*</sec:exclude>
        </sec:cipherSuitesFilter>
      </http:tlsClientParameters>
    </http:conduit>
  </beans>
</beans>