---

- name: Stop tomcat
  service:
    name: "{{ tomcat_service }}"
    state: stopped
    pattern: "{{ tomcat_service }}"

- name: Create release directory
  file:
    path: "{{ releases_folder }}"
    state: directory

- name: download intygstjanst-liquibase-runner-{{ version }}.zip
  get_url:
    url: https://build-inera.nordicmedtest.se/nexus/repository/releases/se/inera/intyg/webcert/webcert-liquibase-runner/{{ version }}/webcert-liquibase-runner-{{ version }}.zip
    dest: "{{ releases_folder }}/webcert-liquibase-runner-{{ version }}.zip"
  when: deploy_from_repo|bool

- name: Copy webcert-liquibase-runner-{{ version }}.zip
  copy:
    src: "{{ playbook_dir }}/../tools/liquibase-runner/build/distributions/webcert-liquibase-runner-{{ version }}.zip"
    dest: "{{ releases_folder }}/webcert-liquibase-runner-{{ version }}.zip"
  when: not deploy_from_repo|bool

- name: Unzip webcert-liquibase-runner-{{ version }}.zip
  unarchive:
    src: "{{ releases_folder }}/webcert-liquibase-runner-{{ version }}.zip"
    dest: "{{ releases_folder }}"
    creates: "{{ releases_folder }}/webcert-liquibase-runner-{{ version }}/bin/liquibase-runner"
    remote_src: yes

- name: Run liquibase update
  command: "{{ releases_folder }}/webcert-liquibase-runner-{{ version }}/bin/webcert-liquibase-runner --url={{ database_url }} --username={{ database_username }} --password={{ database_password }} update"
  args:
      chdir: "{{ releases_folder }}/webcert-liquibase-runner-{{ version }}"
  environment:
      JAVA_HOME: "{{ java_home }}"

- name: Download webcert-web-{{ version }}.war
  get_url:
    url: https://build-inera.nordicmedtest.se/nexus/repository/releases/se/inera/intyg/webcert/webcert-web/{{ version }}/webcert-web-{{ version }}.war
    dest: "{{ releases_folder }}/webcert-web-{{ version }}.war"
    timeout: 120
  when: deploy_from_repo|bool

- name: Copy webcert-web-{{ version }}.war from THIS machine when not deploying from remote repo
  copy:
    src: "{{ playbook_dir }}/../web/build/libs/webcert-web-{{ version }}.war"
    dest: "{{ releases_folder }}/webcert-web-{{ version }}.war"
  when: not deploy_from_repo|bool

- name: Remove old version of unpacked war
  file:
    state: absent
    path: "{{ webapps_folder }}/ROOT"

- name: Deploy webcert-web-{{ version }}.war as ROOT.war
  copy:
    src: "{{ releases_folder }}/webcert-web-{{ version }}.war"
    dest: "{{ webapps_folder }}/ROOT.war"
    remote_src: True

- name: Download logsender-{{ logsender_version }}.war
  get_url:
    url: https://build-inera.nordicmedtest.se/nexus/repository/releases/se/inera/intyg/logsender/logsender/{{ logsender_version }}/logsender-{{ logsender_version }}.war
    dest: "{{ releases_folder }}/logsender-{{ logsender_version }}.war"

- name: Remove old logsender_version of unpacked log-sender war
  file:
    state: absent
    path: "{{ webapps_folder }}/log-sender"

- name: Deploy logsender-{{ logsender_version }}.war as log-sender.war
  copy:
    src: "{{ releases_folder }}/logsender-{{ logsender_version }}.war"
    dest: "{{ webapps_folder }}/log-sender.war"
    remote_src: True

- name: Fetch configuration repo to get new branches
  command: git fetch origin
  args:
    chdir: "{{ config_folder }}"

- name: Update configuration to {{ config_version }}
  git:
    repo: "{{ config_repository }}"
    dest: "{{ config_folder }}"
    version: "{{ config_version }}"

- name: Start tomcat
  service:
    name: "{{ tomcat_service }}"
    state: started
    pattern: "{{ tomcat_service }}"
